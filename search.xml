<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>仓库管理系统（SpringBoot+Vue）</title>
      <link href="/2023/10/09/cang-ku-guan-li-xi-tong-springboot-vue/"/>
      <url>/2023/10/09/cang-ku-guan-li-xi-tong-springboot-vue/</url>
      
        <content type="html"><![CDATA[<h1 id="仓库管理系统（SpringBoot-Vue）"><a href="#仓库管理系统（SpringBoot-Vue）" class="headerlink" title="仓库管理系统（SpringBoot+Vue）"></a>仓库管理系统（SpringBoot+Vue）</h1><h2 id="一、创建后端项目"><a href="#一、创建后端项目" class="headerlink" title="一、创建后端项目"></a>一、创建后端项目</h2><h3 id="1、新建空白文件夹，用于存放前后端文件"><a href="#1、新建空白文件夹，用于存放前后端文件" class="headerlink" title="1、新建空白文件夹，用于存放前后端文件"></a>1、新建空白文件夹，用于存放前后端文件</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009200127023.png"></p><h3 id="2、用IDEA打开刚刚新建的空白文件夹"><a href="#2、用IDEA打开刚刚新建的空白文件夹" class="headerlink" title="2、用IDEA打开刚刚新建的空白文件夹"></a>2、用IDEA打开刚刚新建的空白文件夹</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201511541.png"></p><h3 id="3、创建SpringBoot工程"><a href="#3、创建SpringBoot工程" class="headerlink" title="3、创建SpringBoot工程"></a>3、创建SpringBoot工程</h3><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201602518.png" alt="" style="zoom:50%;"><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201711209.png" alt="" style="zoom:50%;"><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201915430.png"></p><h3 id="4、创建测试类进行测试"><a href="#4、创建测试类进行测试" class="headerlink" title="4、创建测试类进行测试"></a>4、创建测试类进行测试</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203304617.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203523220.png"></p><p>通过百度查询报错原因，发现是SpringBoot版本太高导致的，版本降低就好了</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203616134.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203708339.png"></p><p>浏览器打开localhost:8080，配置成功</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203804562.png"></p><h2 id="二、加入mybatis-plus支持"><a href="#二、加入mybatis-plus支持" class="headerlink" title="二、加入mybatis-plus支持"></a>二、加入mybatis-plus支持</h2><h3 id="1、在pom-xml中添加mybatis-plus依赖"><a href="#1、在pom-xml中添加mybatis-plus依赖" class="headerlink" title="1、在pom.xml中添加mybatis-plus依赖"></a>1、在pom.xml中添加mybatis-plus依赖</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009204611144.png"></p><h3 id="2、创建数据库"><a href="#2、创建数据库" class="headerlink" title="2、创建数据库"></a>2、创建数据库</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205019360.png"></p><h3 id="3、创建用户表"><a href="#3、创建用户表" class="headerlink" title="3、创建用户表"></a>3、创建用户表</h3><pre class=" language-mysql"><code class="language-mysql">create table user(    id int auto_increment comment '主键' primary key,    no varchar(20) null comment '账号',    name varchar(100) not null comment '名字',    password varchar(20) not null comment '密码',    age int null comment '年龄',    sex int null comment '性别',    phone varchar(20) null comment '电话',    role_id int null comment '角色 0超级管理员，1管理员，2普通用户',    isValid varchar(4) default 'Y' null comment '是否有效，Y有效，其他无效') charset=utf8;</code></pre><h3 id="4、给用户表添加一条数据"><a href="#4、给用户表添加一条数据" class="headerlink" title="4、给用户表添加一条数据"></a>4、给用户表添加一条数据</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205732745.png"></p><h3 id="5、配置yml文件"><a href="#5、配置yml文件" class="headerlink" title="5、配置yml文件"></a>5、配置yml文件</h3><p>创建SpringBoot项目时会自动生成application.properties文件，但我们一般使用application.yml</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205930748.png"></p><p>端口和数据源的配置</p><pre class=" language-yml"><code class="language-yml">server:  port: 8090spring:  datasource:    url: jdbc:mysql://localhost:3306/wms?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8    driver-class-name: com.mysql.cj.jdbc.Driver    username: root    password: chx308241</code></pre><h3 id="6、编写测试代码"><a href="#6、编写测试代码" class="headerlink" title="6、编写测试代码"></a>6、编写测试代码</h3><ul><li>创建实体类</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String no<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> String phone<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> roleId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"isValid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String isValid<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>创建mapper接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>创建service接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>创建service实现类</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>在HelloController类中编写测试代码</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>浏览器访问localhost:8090/list</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009212114006.png"></p><ul><li>自定义listAll()方法</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//HelloController类中</span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    return userService.list();</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//UserService接口中</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//UserServiceImpl类中</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//UserMapper接口中</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--UserMapper.xml文件中--></span><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h2 id="三、使用代码生成器生成代码"><a href="#三、使用代码生成器生成代码" class="headerlink" title="三、使用代码生成器生成代码"></a>三、使用代码生成器生成代码</h2><h3 id="1、在pom-xml中添加依赖"><a href="#1、在pom-xml中添加依赖" class="headerlink" title="1、在pom.xml中添加依赖"></a>1、在pom.xml中添加依赖</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.spring4all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-swagger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.5.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="2、新建CodeGenerator类"><a href="#2、新建CodeGenerator类" class="headerlink" title="2、新建CodeGenerator类"></a>2、新建CodeGenerator类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>MybatisPlusException<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringPool<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>AutoGenerator<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>InjectionConfig<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>po<span class="token punctuation">.</span>TableInfo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>NamingStrategy<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>FreemarkerTemplateEngine<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeGenerator</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 读取控制台内容     * &lt;/p>     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">scanner</span><span class="token punctuation">(</span>String tip<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder help <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        help<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"请输入"</span> <span class="token operator">+</span> tip <span class="token operator">+</span> <span class="token string">": "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>help<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String ipt <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>ipt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> ipt<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusException</span><span class="token punctuation">(</span><span class="token string">"请输入正确的"</span> <span class="token operator">+</span> tip <span class="token operator">+</span> <span class="token string">"! "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 操作步骤：     *  1.修改数据源包括地址密码信息，对应代码标记     *  2.模块配置，可以修改包名     *  3.修改模块（这步可忽略）     * @param args     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 代码生成器</span>        AutoGenerator mpg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 全局配置</span>        GlobalConfig gc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String projectPath <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\wms"</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span>projectPath <span class="token operator">+</span> <span class="token string">"\\src\\main\\java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">"ghost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setSwagger2</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//实体属性 Swagger2 注解</span>        gc<span class="token punctuation">.</span><span class="token function">setBaseResultMap</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// XML ResultMap</span>        gc<span class="token punctuation">.</span><span class="token function">setBaseColumnList</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// XML columnList</span>        <span class="token comment" spellcheck="true">//去掉service接口首字母的I，如DU为User则叫UserService</span>        gc<span class="token punctuation">.</span><span class="token function">setServiceName</span><span class="token punctuation">(</span><span class="token string">"%sService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>gc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 数据源配置</span>        DataSourceConfig dsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 一、修改数据源</span>        dsc<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/wms?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// dsc.setSchemaName("public");</span>        dsc<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dsc<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dsc<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"chx308241"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dsc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 包配置</span>        PackageConfig pc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// pc.setModuleName(scanner("模块名"));</span>        <span class="token comment" spellcheck="true">// 二、模块配置</span>        pc<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">"com.wms"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">"entity"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">"mapper"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setService</span><span class="token punctuation">(</span><span class="token string">"service"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setServiceImpl</span><span class="token punctuation">(</span><span class="token string">"service.impl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setController</span><span class="token punctuation">(</span><span class="token string">"controller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>pc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义配置</span>        InjectionConfig cfg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InjectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// to do nothing</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果模板引擎是 freemarker</span>        String templatePath <span class="token operator">=</span> <span class="token string">"templates/mapper.xml.ftl"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义输出配置</span>        List<span class="token operator">&lt;</span>FileOutConfig<span class="token operator">></span> focList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义配置会被优先输出</span>        focList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutConfig</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">outputFile</span><span class="token punctuation">(</span>TableInfo tableInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 自定义输出文件名</span>                <span class="token keyword">return</span> projectPath <span class="token operator">+</span> <span class="token string">"\\src\\main\\resources\\mapper\\"</span> <span class="token operator">+</span> pc<span class="token punctuation">.</span><span class="token function">getModuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> tableInfo<span class="token punctuation">.</span><span class="token function">getEntityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"Mapper"</span> <span class="token operator">+</span> StringPool<span class="token punctuation">.</span>DOT_XML<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cfg<span class="token punctuation">.</span><span class="token function">setFileOutConfigList</span><span class="token punctuation">(</span>focList<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setCfg</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 配置模板</span>        TemplateConfig templateConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        templateConfig<span class="token punctuation">.</span><span class="token function">setXml</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setTemplate</span><span class="token punctuation">(</span>templateConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 策略配置</span>        StrategyConfig strategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setColumnNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setEntityLombokModel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setRestControllerStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token function">scanner</span><span class="token punctuation">(</span><span class="token string">"表名，多个英文逗号分割"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setControllerMappingHyphenStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setTemplateEngine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FreemarkerTemplateEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、运行CodeGenerator类"><a href="#3、运行CodeGenerator类" class="headerlink" title="3、运行CodeGenerator类"></a>3、运行CodeGenerator类</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231011092853916.png"></p><h2 id="四、实现增删改查"><a href="#四、实现增删改查" class="headerlink" title="四、实现增删改查"></a>四、实现增删改查</h2><h3 id="1、在UserController类中编写增删改查代码"><a href="#1、在UserController类中编写增删改查代码" class="headerlink" title="1、在UserController类中编写增删改查代码"></a>1、在UserController类中编写增删改查代码</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//修改</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/mod"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//新增或修改</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/saveOrMod"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">saveOrMod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/delete"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span>  userService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//查询（模糊、匹配）</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listP"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listP</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2、使用Postman工具进行测试"><a href="#2、使用Postman工具进行测试" class="headerlink" title="2、使用Postman工具进行测试"></a>2、使用Postman工具进行测试</h3><h2 id="五、分页的处理"><a href="#五、分页的处理" class="headerlink" title="五、分页的处理"></a>五、分页的处理</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Vue后台管理系统</title>
      <link href="/2023/09/07/springboot-vue-hou-tai-guan-li-xi-tong/"/>
      <url>/2023/09/07/springboot-vue-hou-tai-guan-li-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot-Vue后台管理系统"><a href="#SpringBoot-Vue后台管理系统" class="headerlink" title="SpringBoot+Vue后台管理系统"></a>SpringBoot+Vue后台管理系统</h1><h2 id="01-Vue2集成ElementUI"><a href="#01-Vue2集成ElementUI" class="headerlink" title="01 Vue2集成ElementUI"></a>01 Vue2集成ElementUI</h2><p>软件版本：</p><ul><li>JDK 1.8</li><li>MySQL 5.7+</li><li>node 14.16.0</li><li>navicat</li><li>idea</li></ul><p>vue-cli安装命令：</p><p>npm install -g @vue/cli这条命令会安装最新版本的vue-cli</p><p>如果想要安装指定版本的vue-cli可以使用下面的命令：</p><p>npm install -g @vue/cli@版本号这里的“版本号”填自己想要安装的版本就可以了，比如4.16.0</p><p>vue-cli版本查看：</p><p>vue –version</p><p>vue -V</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907170316461.png"></p><p>以上两个命令都可以查看vue-cli的版本</p><p>npm淘宝镜像设置：</p><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>创建vue项目：</p><p>找一个文件夹留放项目，然后在这个文件夹下通过控制台，输入vue create 项目名即可创建项目。</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171120798.png"></p><p>选择Manually select features</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171146670.png"></p><p>选择Choose Vue version，Babel，Router，其他的不选</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171223181.png"></p><p>选择2.x</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171245227.png"></p><p>Use history mode for router?选择Y</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171307872.png"></p><p>选择In package.json</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171330854.png"></p><p>Save this as a preset for future projects?选择N</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171350360.png"></p><p>这样项目就创建成功了，如下图所示：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171653358.png"></p><p>按照控制台上面的步骤：</p><p>cd demo</p><p>npm run serve</p><p>就可以启动vue项目了</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907172347494.png"></p><p>在浏览器中输入localhost:8080即可访问</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907172504582.png"></p><p>想要停止服务在控制台输入Ctrl+C即可，也可以直接关闭控制台：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173822563.png"></p><p>使用idea打开vue项目：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173021608.png"></p><p>Element安装：</p><p>npm i element-ui -S</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173933721.png"></p><p>安装成功后，在package.json文件中可以看到element-ui的版本号：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907174112337.png"></p><p>使用element-ui：</p><p>将以下两行代码复制到main.js文件中：</p><p>import ElementUI from ‘element-ui’; </p><p>import ‘element-ui/lib/theme-chalk/index.css’;</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175016502.png"></p><p>复制下面一行代码到main.js中：</p><p>Vue.use(ElementUI);</p><p>其中，还可以配置组件大小</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175238424.png"></p><p>测试element-ui是否可以使用：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175414069.png"></p><p>重新启动项目看一下效果：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175539526.png"></p><p>通过el-button的type属性可以更改按钮颜色：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175855944.png"></p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175910237.png"></p><p>primary: 蓝色</p><p>success: 绿色</p><p>info: 灰色</p><p>warning: 橙色</p><p>danger: 红色</p><h2 id="02-Vue后台主体框架搭建"><a href="#02-Vue后台主体框架搭建" class="headerlink" title="02 Vue后台主体框架搭建"></a>02 Vue后台主体框架搭建</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AE教程</title>
      <link href="/2023/09/06/ae-jiao-cheng/"/>
      <url>/2023/09/06/ae-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="AE教程"><a href="#AE教程" class="headerlink" title="AE教程"></a>AE教程</h1><h2 id="01-了解影视后期合成及AE软件"><a href="#01-了解影视后期合成及AE软件" class="headerlink" title="01 了解影视后期合成及AE软件"></a>01 了解影视后期合成及AE软件</h2><p>AE软件涵盖的范围：</p><p>栏目包装</p><p>特效合成</p><p>抠像合成</p><p>剪辑调色</p><p>AE工作的基本原理：</p><p>层级合成</p><p>层级合成的由来：</p><p>使用在特殊玻璃片上绘景的技术利用摄像机视差的原理来制作特效场景，这些玻璃片就是后期软件中的层。</p><p>目前市面上比较常用的影视特效合成软件：</p><p>AfterEffectsNukeautodeask smoke</p><p>AE是层级合成，Nuke是节点合成。</p><p>层级合成与节点合成的区别介绍：</p><p>层级合成在AE中是一层一层叠加的形式，而节点合成在Nuke中是一个节点一个节点进行拼接的形式。</p><h2 id="02-AE软件初识-工作流程初识"><a href="#02-AE软件初识-工作流程初识" class="headerlink" title="02 AE软件初识_工作流程初识"></a>02 AE软件初识_工作流程初识</h2><p>小案例：加水印</p><p>1、将素材拖入AE中</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091511873.png"></p><p>这时我们可以看到项目栏多出了刚刚拖入的素材</p><p>2、将项目栏的素材视频拖入到下方</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091705455.png"></p><p>3、点击工具栏中的文字工具，然后在视频中点击一下，输入想加入的水印，这里以“谢谢观看”为例</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091843567.png"></p><p>4、接下来就是调整字体、字体大小和字体位置，其中字体是在视频右边的字符目录中进行调整，字体大小可以通过按住shift键进行文本框的拖拽，这样可以保持等比例缩放，要注意拖拽的时候我们要选择鼠标工具，而不是文本工具，字体位置的话拖动文本框即可</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092239645.png"></p><p>5、接下来就是调整字体不透明度</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092338869.png"></p><p>6、这样水印就已经添加成功，然后就是导出视频</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092633614.png"></p><p>7、接下来我们需要设置输出位置和输出模块</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092802732.png"></p><p>输出位置自己随便设置就行了，输出模块的话，需要选择格式为”QuickTime”，格式选项的视频编解码器设置为”GoPro CineForm”，品质调节到5</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092913202.png"></p><p>8、接下来点击渲染就可以进行视频的导出了</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908093112263.png"></p><p>9、这时只是导出了视频，项目还没有进行保存，不要直接把项目给关闭掉，需要点击文件中的保存按钮，然后设置一下项目名即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> AE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python网站开发</title>
      <link href="/2023/08/21/python-wang-zhan-kai-fa/"/>
      <url>/2023/08/21/python-wang-zhan-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="python网站开发"><a href="#python网站开发" class="headerlink" title="python网站开发"></a>python网站开发</h1>]]></content>
      
      
      
        <tags>
            
            <tag> python 网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>政企体系公共教材基础知识篇</title>
      <link href="/2023/08/18/zheng-qi-ti-xi-gong-gong-jiao-cai-ji-chu-zhi-shi-pian/"/>
      <url>/2023/08/18/zheng-qi-ti-xi-gong-gong-jiao-cai-ji-chu-zhi-shi-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="政企体系公共教材基础知识篇"><a href="#政企体系公共教材基础知识篇" class="headerlink" title="政企体系公共教材基础知识篇"></a>政企体系公共教材基础知识篇</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 政企 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2023/07/12/python-pa-chong/"/>
      <url>/2023/07/12/python-pa-chong/</url>
      
        <content type="html"><![CDATA[<h1 id="python爬虫"><a href="#python爬虫" class="headerlink" title="python爬虫"></a>python爬虫</h1><h2 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言</title>
      <link href="/2023/07/03/go-yu-yan/"/>
      <url>/2023/07/03/go-yu-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="Go语言"><a href="#Go语言" class="headerlink" title="Go语言"></a>Go语言</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/01/hello-world/"/>
      <url>/2023/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
