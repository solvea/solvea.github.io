<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git常用指令</title>
      <link href="/2023/10/29/git-chang-yong-zhi-ling/"/>
      <url>/2023/10/29/git-chang-yong-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="git常用指令"><a href="#git常用指令" class="headerlink" title="git常用指令"></a>git常用指令</h1><pre class=" language-shell"><code class="language-shell"># 初始化仓库git init# 查看文件状态git status# 暂存文件git add .# 提交文件git commit -m '注释'# 查看日志git log# 回退git reset --hard commitID# 查看本地分支git branch# 创建本地分支git branch 分支名# 切换分支git checkout 分支名# 直接切换到一个不存在的分支git checkout -b 分支名# 合并分支git merge 分支名# 删除分支git branch -d 分支名（删除时需要做各种检查）git branch -D 分支名（强制删除）# 添加远程仓库git remote add 远端名称 仓库路径# 查看远程仓库git remote# 将本地仓库推送到远程仓库git push# 同步远程仓库git fetch</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仓库管理系统（SpringBoot+Vue）</title>
      <link href="/2023/10/09/cang-ku-guan-li-xi-tong-springboot-vue/"/>
      <url>/2023/10/09/cang-ku-guan-li-xi-tong-springboot-vue/</url>
      
        <content type="html"><![CDATA[<h1 id="仓库管理系统（SpringBoot-Vue）"><a href="#仓库管理系统（SpringBoot-Vue）" class="headerlink" title="仓库管理系统（SpringBoot+Vue）"></a>仓库管理系统（SpringBoot+Vue）</h1><h2 id="一、创建后端项目"><a href="#一、创建后端项目" class="headerlink" title="一、创建后端项目"></a>一、创建后端项目</h2><h3 id="1、新建空白文件夹，用于存放前后端文件"><a href="#1、新建空白文件夹，用于存放前后端文件" class="headerlink" title="1、新建空白文件夹，用于存放前后端文件"></a>1、新建空白文件夹，用于存放前后端文件</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009200127023.png"></p><h3 id="2、用IDEA打开刚刚新建的空白文件夹"><a href="#2、用IDEA打开刚刚新建的空白文件夹" class="headerlink" title="2、用IDEA打开刚刚新建的空白文件夹"></a>2、用IDEA打开刚刚新建的空白文件夹</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201511541.png"></p><h3 id="3、创建SpringBoot工程"><a href="#3、创建SpringBoot工程" class="headerlink" title="3、创建SpringBoot工程"></a>3、创建SpringBoot工程</h3><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201602518.png" alt="" style="zoom:50%;"><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201711209.png" alt="" style="zoom:50%;"><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009201915430.png"></p><h3 id="4、创建测试类进行测试"><a href="#4、创建测试类进行测试" class="headerlink" title="4、创建测试类进行测试"></a>4、创建测试类进行测试</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203304617.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203523220.png"></p><p>通过百度查询报错原因，发现是SpringBoot版本太高导致的，版本降低就好了</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203616134.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203708339.png"></p><p>浏览器打开localhost:8080，配置成功</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009203804562.png"></p><h2 id="二、加入mybatis-plus支持"><a href="#二、加入mybatis-plus支持" class="headerlink" title="二、加入mybatis-plus支持"></a>二、加入mybatis-plus支持</h2><h3 id="1、在pom-xml中添加mybatis-plus依赖"><a href="#1、在pom-xml中添加mybatis-plus依赖" class="headerlink" title="1、在pom.xml中添加mybatis-plus依赖"></a>1、在pom.xml中添加mybatis-plus依赖</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009204611144.png"></p><h3 id="2、创建数据库"><a href="#2、创建数据库" class="headerlink" title="2、创建数据库"></a>2、创建数据库</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205019360.png"></p><h3 id="3、创建用户表"><a href="#3、创建用户表" class="headerlink" title="3、创建用户表"></a>3、创建用户表</h3><pre class=" language-mysql"><code class="language-mysql">create table user(    id int auto_increment comment '主键' primary key,    no varchar(20) null comment '账号',    name varchar(100) not null comment '名字',    password varchar(20) not null comment '密码',    age int null comment '年龄',    sex int null comment '性别',    phone varchar(20) null comment '电话',    role_id int null comment '角色 0超级管理员，1管理员，2普通用户',    isValid varchar(4) default 'Y' null comment '是否有效，Y有效，其他无效') charset=utf8;</code></pre><h3 id="4、给用户表添加一条数据"><a href="#4、给用户表添加一条数据" class="headerlink" title="4、给用户表添加一条数据"></a>4、给用户表添加一条数据</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205732745.png"></p><h3 id="5、配置yml文件"><a href="#5、配置yml文件" class="headerlink" title="5、配置yml文件"></a>5、配置yml文件</h3><p>创建SpringBoot项目时会自动生成application.properties文件，但我们一般使用application.yml</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009205930748.png"></p><p>端口和数据源的配置</p><pre class=" language-yml"><code class="language-yml">server:  port: 8090spring:  datasource:    url: jdbc:mysql://localhost:3306/wms?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8    driver-class-name: com.mysql.cj.jdbc.Driver    username: root    password: chx308241</code></pre><h3 id="6、编写测试代码"><a href="#6、编写测试代码" class="headerlink" title="6、编写测试代码"></a>6、编写测试代码</h3><ul><li>创建实体类</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String no<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> String phone<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> roleId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"isValid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String isValid<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>创建mapper接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>创建service接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>创建service实现类</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><ul><li>在HelloController类中编写测试代码</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>浏览器访问localhost:8090/list</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231009212114006.png"></p><ul><li>自定义listAll()方法</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//HelloController类中</span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    return userService.list();</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//UserService接口中</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//UserServiceImpl类中</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//UserMapper接口中</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--UserMapper.xml文件中--></span><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from user    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h2 id="三、使用代码生成器生成代码"><a href="#三、使用代码生成器生成代码" class="headerlink" title="三、使用代码生成器生成代码"></a>三、使用代码生成器生成代码</h2><h3 id="1、在pom-xml中添加依赖"><a href="#1、在pom-xml中添加依赖" class="headerlink" title="1、在pom.xml中添加依赖"></a>1、在pom.xml中添加依赖</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.spring4all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-swagger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.5.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="2、新建CodeGenerator类"><a href="#2、新建CodeGenerator类" class="headerlink" title="2、新建CodeGenerator类"></a>2、新建CodeGenerator类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>MybatisPlusException<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringPool<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>AutoGenerator<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>InjectionConfig<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>po<span class="token punctuation">.</span>TableInfo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>config<span class="token punctuation">.</span>rules<span class="token punctuation">.</span>NamingStrategy<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>generator<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>FreemarkerTemplateEngine<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeGenerator</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 读取控制台内容     * &lt;/p>     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">scanner</span><span class="token punctuation">(</span>String tip<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder help <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        help<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"请输入"</span> <span class="token operator">+</span> tip <span class="token operator">+</span> <span class="token string">": "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>help<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String ipt <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>ipt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> ipt<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusException</span><span class="token punctuation">(</span><span class="token string">"请输入正确的"</span> <span class="token operator">+</span> tip <span class="token operator">+</span> <span class="token string">"! "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 操作步骤：     *  1.修改数据源包括地址密码信息，对应代码标记     *  2.模块配置，可以修改包名     *  3.修改模块（这步可忽略）     * @param args     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 代码生成器</span>        AutoGenerator mpg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 全局配置</span>        GlobalConfig gc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String projectPath <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\wms"</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span>projectPath <span class="token operator">+</span> <span class="token string">"\\src\\main\\java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">"ghost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gc<span class="token punctuation">.</span><span class="token function">setSwagger2</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//实体属性 Swagger2 注解</span>        gc<span class="token punctuation">.</span><span class="token function">setBaseResultMap</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// XML ResultMap</span>        gc<span class="token punctuation">.</span><span class="token function">setBaseColumnList</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// XML columnList</span>        <span class="token comment" spellcheck="true">//去掉service接口首字母的I，如DU为User则叫UserService</span>        gc<span class="token punctuation">.</span><span class="token function">setServiceName</span><span class="token punctuation">(</span><span class="token string">"%sService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>gc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 数据源配置</span>        DataSourceConfig dsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 一、修改数据源</span>        dsc<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://localhost:3306/wms?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// dsc.setSchemaName("public");</span>        dsc<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dsc<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dsc<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"chx308241"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dsc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 包配置</span>        PackageConfig pc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// pc.setModuleName(scanner("模块名"));</span>        <span class="token comment" spellcheck="true">// 二、模块配置</span>        pc<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">"com.wms"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">"entity"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">"mapper"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setService</span><span class="token punctuation">(</span><span class="token string">"service"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setServiceImpl</span><span class="token punctuation">(</span><span class="token string">"service.impl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setController</span><span class="token punctuation">(</span><span class="token string">"controller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>pc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义配置</span>        InjectionConfig cfg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InjectionConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// to do nothing</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果模板引擎是 freemarker</span>        String templatePath <span class="token operator">=</span> <span class="token string">"templates/mapper.xml.ftl"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义输出配置</span>        List<span class="token operator">&lt;</span>FileOutConfig<span class="token operator">></span> focList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义配置会被优先输出</span>        focList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutConfig</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> String <span class="token function">outputFile</span><span class="token punctuation">(</span>TableInfo tableInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 自定义输出文件名</span>                <span class="token keyword">return</span> projectPath <span class="token operator">+</span> <span class="token string">"\\src\\main\\resources\\mapper\\"</span> <span class="token operator">+</span> pc<span class="token punctuation">.</span><span class="token function">getModuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> tableInfo<span class="token punctuation">.</span><span class="token function">getEntityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"Mapper"</span> <span class="token operator">+</span> StringPool<span class="token punctuation">.</span>DOT_XML<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cfg<span class="token punctuation">.</span><span class="token function">setFileOutConfigList</span><span class="token punctuation">(</span>focList<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setCfg</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 配置模板</span>        TemplateConfig templateConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        templateConfig<span class="token punctuation">.</span><span class="token function">setXml</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setTemplate</span><span class="token punctuation">(</span>templateConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 策略配置</span>        StrategyConfig strategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setColumnNaming</span><span class="token punctuation">(</span>NamingStrategy<span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setEntityLombokModel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setRestControllerStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token function">scanner</span><span class="token punctuation">(</span><span class="token string">"表名，多个英文逗号分割"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">setControllerMappingHyphenStyle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">setTemplateEngine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FreemarkerTemplateEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mpg<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、运行CodeGenerator类"><a href="#3、运行CodeGenerator类" class="headerlink" title="3、运行CodeGenerator类"></a>3、运行CodeGenerator类</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231011092853916.png"></p><h2 id="四、实现增删改查"><a href="#四、实现增删改查" class="headerlink" title="四、实现增删改查"></a>四、实现增删改查</h2><h3 id="1、在UserController类中编写增删改查代码"><a href="#1、在UserController类中编写增删改查代码" class="headerlink" title="1、在UserController类中编写增删改查代码"></a>1、在UserController类中编写增删改查代码</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//修改</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/mod"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//新增或修改</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/saveOrMod"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">saveOrMod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">saveOrUpdate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/delete"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">delete</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span>  userService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//查询（模糊、匹配）</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listP"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listP</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2、使用Postman工具进行测试"><a href="#2、使用Postman工具进行测试" class="headerlink" title="2、使用Postman工具进行测试"></a>2、使用Postman工具进行测试</h3><h2 id="五、分页的处理"><a href="#五、分页的处理" class="headerlink" title="五、分页的处理"></a>五、分页的处理</h2><h3 id="1、入参的封装"><a href="#1、入参的封装" class="headerlink" title="1、入参的封装"></a>1、入参的封装</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryPageParam</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> PAGE_SIZE <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> PAGE_NUM <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageSize <span class="token operator">=</span> PAGE_SIZE<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageNum <span class="token operator">=</span> PAGE_NUM<span class="token punctuation">;</span>    <span class="token keyword">private</span> HashMap param<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="2、分页拦截器的配置"><a href="#2、分页拦截器的配置" class="headerlink" title="2、分页拦截器的配置"></a>2、分页拦截器的配置</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>DbType<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>MybatisPlusInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>inner<span class="token punctuation">.</span>PaginationInnerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 添加分页插件     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> MybatisPlusInterceptor <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        MybatisPlusInterceptor interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span>DbType<span class="token punctuation">.</span>MYSQL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果配置多个插件,切记分页最后添加</span>        <span class="token comment" spellcheck="true">//interceptor.addInnerInterceptor(new PaginationInnerInterceptor()); 如果有多数据源可以不配具体类型 否则都建议配上具体的DbType</span>        <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、分页测试"><a href="#3、分页测试" class="headerlink" title="3、分页测试"></a>3、分页测试</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//分页查询</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    System.out.println(query);</span><span class="token comment" spellcheck="true">//    System.out.println("num===" + query.getPageNum());</span><span class="token comment" spellcheck="true">//    System.out.println("size===" + query.getPageSize());</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//    System.out.println("no===" + (String) param.get("no"));</span><span class="token comment" spellcheck="true">//    System.out.println("name===" + (String) param.get("name"));</span>    Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012090914171.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012090939709.png"></p><h3 id="4、自定义分页查询"><a href="#4、自定义分页查询" class="headerlink" title="4、自定义分页查询"></a>4、自定义分页查询</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//自定义分页查询</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPageC"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listPageC</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">pageC</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserService接口中</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserServiceImpl实现类中</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">pageC</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserMapper接口中</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- UserMapper.xml文件中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h3 id="5、自定义SQL使用Wrapper"><a href="#5、自定义SQL使用Wrapper" class="headerlink" title="5、自定义SQL使用Wrapper"></a>5、自定义SQL使用Wrapper</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//自定义SQL使用Wrapper</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPageCC"</span><span class="token punctuation">)</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">listPageCC</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserService接口中</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserServiceImpl实现类中</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>UserMapper<span class="token punctuation">,</span> User<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">pageC</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> wrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// UserMapper接口中</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>WRAPPER<span class="token punctuation">)</span> Wrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- UserMapper.xml文件中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select * from user ${ew.customSqlSegment}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012101356365.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012101411966.png"></p><h2 id="六、返回前端数据的封装"><a href="#六、返回前端数据的封装" class="headerlink" title="六、返回前端数据的封装"></a>六、返回前端数据的封装</h2><h3 id="1、封装Result类"><a href="#1、封装Result类" class="headerlink" title="1、封装Result类"></a>1、封装Result类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Result</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 编码 200/400</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 成功/失败</span>    <span class="token keyword">private</span> Long total<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 总记录数</span>    <span class="token keyword">private</span> Object data<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 数据</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Result <span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">"失败"</span><span class="token punctuation">,</span> 0L<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Result <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"成功"</span><span class="token punctuation">,</span> 0L<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Result <span class="token function">success</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"成功"</span><span class="token punctuation">,</span> 0L<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Result <span class="token function">success</span><span class="token punctuation">(</span>Long total<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"成功"</span><span class="token punctuation">,</span> total<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Result <span class="token function">result</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">,</span> Long total<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Result res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2、测试返回结果"><a href="#2、测试返回结果" class="headerlink" title="2、测试返回结果"></a>2、测试返回结果</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPageCC1"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">listPageCC1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012104015168.png"></p><h2 id="七、创建前端Vue项目"><a href="#七、创建前端Vue项目" class="headerlink" title="七、创建前端Vue项目"></a>七、创建前端Vue项目</h2><h3 id="1、在刚开始新建的文件夹下打开终端"><a href="#1、在刚开始新建的文件夹下打开终端" class="headerlink" title="1、在刚开始新建的文件夹下打开终端"></a>1、在刚开始新建的文件夹下打开终端</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012104808464.png"></p><h3 id="2、在终端中输入如下命令"><a href="#2、在终端中输入如下命令" class="headerlink" title="2、在终端中输入如下命令"></a>2、在终端中输入如下命令</h3><pre class=" language-shell"><code class="language-shell">vue create wms-web</code></pre><p>其中wms-web是前端文件名，自定义即可。</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012105005622.png"></p><h3 id="3、选择Vue2敲回车即可"><a href="#3、选择Vue2敲回车即可" class="headerlink" title="3、选择Vue2敲回车即可"></a>3、选择Vue2敲回车即可</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012105440850.png"></p><h3 id="4、安装成功"><a href="#4、安装成功" class="headerlink" title="4、安装成功"></a>4、安装成功</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012105725088.png"></p><h3 id="5、测试一下"><a href="#5、测试一下" class="headerlink" title="5、测试一下"></a>5、测试一下</h3><p>依次输入如下命令：</p><pre class=" language-shell"><code class="language-shell">cd wms-webnpm run serve</code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012105839564.png"></p><p>浏览器输入localhost:8080即可访问</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012105914908.png"></p><h2 id="八、前端Vue项目导入到IDEA并运行"><a href="#八、前端Vue项目导入到IDEA并运行" class="headerlink" title="八、前端Vue项目导入到IDEA并运行"></a>八、前端Vue项目导入到IDEA并运行</h2><h3 id="1、打开IDEA会发现多了wms-web文件夹"><a href="#1、打开IDEA会发现多了wms-web文件夹" class="headerlink" title="1、打开IDEA会发现多了wms-web文件夹"></a>1、打开IDEA会发现多了wms-web文件夹</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012110445706.png"></p><h3 id="2、运行前端Vue项目"><a href="#2、运行前端Vue项目" class="headerlink" title="2、运行前端Vue项目"></a>2、运行前端Vue项目</h3><p>通过在IDEA的终端输入如下命令：</p><pre class=" language-shell"><code class="language-shell">cd wms-webnpm run serve</code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012110811411.png"></p><p>启动成功</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012110835285.png"></p><h2 id="九、导入Element-ui"><a href="#九、导入Element-ui" class="headerlink" title="九、导入Element-ui"></a>九、导入Element-ui</h2><h3 id="1、安装element-ui"><a href="#1、安装element-ui" class="headerlink" title="1、安装element-ui"></a>1、安装element-ui</h3><p>在终端输入如下命令：</p><pre class=" language-shell"><code class="language-shell">npm i element-ui -S</code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012111423188.png"></p><p>这时可以看到package.json中已经成功安装element-ui</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012111514998.png"></p><h3 id="2、element-ui的使用"><a href="#2、element-ui的使用" class="headerlink" title="2、element-ui的使用"></a>2、element-ui的使用</h3><ul><li>在main.js中全局引入</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-ui/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre><h3 id="3、测试一下"><a href="#3、测试一下" class="headerlink" title="3、测试一下"></a>3、测试一下</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012112251411.png"></p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012112310342.png"></p><h2 id="十、搭建页面布局"><a href="#十、搭建页面布局" class="headerlink" title="十、搭建页面布局"></a>十、搭建页面布局</h2><h3 id="1、在components文件夹下新建Index-vue"><a href="#1、在components文件夹下新建Index-vue" class="headerlink" title="1、在components文件夹下新建Index.vue"></a>1、在components文件夹下新建Index.vue</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012142621539.png"></p><h3 id="2、把element-ui中的容器布局中的源代码复制到Index-vue中"><a href="#2、把element-ui中的容器布局中的源代码复制到Index-vue中" class="headerlink" title="2、把element-ui中的容器布局中的源代码复制到Index.vue中"></a>2、把element-ui中的容器布局中的源代码复制到Index.vue中</h3><pre class=" language-vue"><code class="language-vue"><template>  <el-container style="height: 500px; border: 1px solid #eee">    <el-aside width="200px" style="background-color: rgb(238, 241, 246)">      <el-menu :default-openeds="['1', '3']">        <el-submenu index="1">          <template slot="title"><i class="el-icon-message"></i>导航一</template>          <el-menu-item-group>            <template slot="title">分组一</template>            <el-menu-item index="1-1">选项1</el-menu-item>            <el-menu-item index="1-2">选项2</el-menu-item>          </el-menu-item-group>          <el-menu-item-group title="分组2">            <el-menu-item index="1-3">选项3</el-menu-item>          </el-menu-item-group>          <el-submenu index="1-4">            <template slot="title">选项4</template>            <el-menu-item index="1-4-1">选项4-1</el-menu-item>          </el-submenu>        </el-submenu>        <el-submenu index="2">          <template slot="title"><i class="el-icon-menu"></i>导航二</template>          <el-menu-item-group>            <template slot="title">分组一</template>            <el-menu-item index="2-1">选项1</el-menu-item>            <el-menu-item index="2-2">选项2</el-menu-item>          </el-menu-item-group>          <el-menu-item-group title="分组2">            <el-menu-item index="2-3">选项3</el-menu-item>          </el-menu-item-group>          <el-submenu index="2-4">            <template slot="title">选项4</template>            <el-menu-item index="2-4-1">选项4-1</el-menu-item>          </el-submenu>        </el-submenu>        <el-submenu index="3">          <template slot="title"><i class="el-icon-setting"></i>导航三</template>          <el-menu-item-group>            <template slot="title">分组一</template>            <el-menu-item index="3-1">选项1</el-menu-item>            <el-menu-item index="3-2">选项2</el-menu-item>          </el-menu-item-group>          <el-menu-item-group title="分组2">            <el-menu-item index="3-3">选项3</el-menu-item>          </el-menu-item-group>          <el-submenu index="3-4">            <template slot="title">选项4</template>            <el-menu-item index="3-4-1">选项4-1</el-menu-item>          </el-submenu>        </el-submenu>      </el-menu>    </el-aside>    <el-container>      <el-header style="text-align: right; font-size: 12px">        <el-dropdown>          <i class="el-icon-setting" style="margin-right: 15px"></i>          <el-dropdown-menu slot="dropdown">            <el-dropdown-item>查看</el-dropdown-item>            <el-dropdown-item>新增</el-dropdown-item>            <el-dropdown-item>删除</el-dropdown-item>          </el-dropdown-menu>        </el-dropdown>        <span>王小虎</span>      </el-header>      <el-main>        <el-table :data="tableData">          <el-table-column prop="date" label="日期" width="140">          </el-table-column>          <el-table-column prop="name" label="姓名" width="120">          </el-table-column>          <el-table-column prop="address" label="地址">          </el-table-column>        </el-table>      </el-main>    </el-container>  </el-container></template><script>export default {  name: "Index",  data() {    const item = {      date: '2016-05-02',      name: '王小虎',      address: '上海市普陀区金沙江路 1518 弄'    };    return {      tableData: Array(10).fill(item)    }  }}</script><style scoped>  .el-header {    background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;  }</style></code></pre><h3 id="3、将Index-vue引入App-vue中"><a href="#3、将Index-vue引入App-vue中" class="headerlink" title="3、将Index.vue引入App.vue中"></a>3、将Index.vue引入App.vue中</h3><pre class=" language-vue"><code class="language-vue"><template>  <div id="app">    <Index></Index>  </div></template><script>  import Index from "@/components/Index.vue";  export default {    name: 'App',    components: {      Index    }  }</script><style>  #app {  }</style></code></pre><h3 id="4、运行一下看看页面效果"><a href="#4、运行一下看看页面效果" class="headerlink" title="4、运行一下看看页面效果"></a>4、运行一下看看页面效果</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012143118174.png"></p><h3 id="5、调整页面"><a href="#5、调整页面" class="headerlink" title="5、调整页面"></a>5、调整页面</h3><p>在assets文件夹下新建global.css，编写如下代码：</p><pre class=" language-css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在main.js中引入global.css</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'./assets/global.css'</span></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012143404077.png"></p><p>这时可以看到四周的空白边框已经消失了，但是表格周围的空白间距有点大，我们通过f12查看网页源代码</p><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012143626059.png"></p><p>可以看到是.el-main的padding值设置为20px导致的，所以我们到Index.vue中修改一下.el-main的padding值</p><pre class=" language-vue"><code class="language-vue"><style scoped>  .el-header {    background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;  }    .el-main {    padding: 5px;  }</style></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012143816508.png"></p><p>页面并没有铺满整个页面，需要调整一下高度：</p><p>在App.vue中：</p><pre class=" language-vue"><code class="language-vue"><style>  html, body, #app {    height: 100%;  }</style></code></pre><p>在Index.vue中：</p><pre class=" language-vue"><code class="language-vue"><el-container style="height: 100%; border: 1px solid #eee">  <el-aside width="200px" style="background-color: rgb(238, 241, 246); height: 100%">    <el-menu :default-openeds="['1', '3']" style="height: 100%;">    </el-menu>  </el-aside>  <el-container style="height: 100%">    <el-main style="height: 100%">    </el-main>  </el-container></el-container></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012154128051.png"></p><h2 id="十一、页面布局的拆分"><a href="#十一、页面布局的拆分" class="headerlink" title="十一、页面布局的拆分"></a>十一、页面布局的拆分</h2><p>在components文件夹下新建Aside.vue、Header.vue、Main.vue，将Index.vue中对应代码复制到相应Vue文件中，并将其重新引入Index.vue中。</p><ul><li>Aside.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <el-menu :default-openeds="['1', '3']" style="height: 100%;">    <el-submenu index="1">      <template slot="title"><i class="el-icon-message"></i>导航一</template>      <el-menu-item-group>        <template slot="title">分组一</template>        <el-menu-item index="1-1">选项1</el-menu-item>        <el-menu-item index="1-2">选项2</el-menu-item>      </el-menu-item-group>      <el-menu-item-group title="分组2">        <el-menu-item index="1-3">选项3</el-menu-item>      </el-menu-item-group>      <el-submenu index="1-4">        <template slot="title">选项4</template>        <el-menu-item index="1-4-1">选项4-1</el-menu-item>      </el-submenu>    </el-submenu>    <el-submenu index="2">      <template slot="title"><i class="el-icon-menu"></i>导航二</template>      <el-menu-item-group>        <template slot="title">分组一</template>        <el-menu-item index="2-1">选项1</el-menu-item>        <el-menu-item index="2-2">选项2</el-menu-item>      </el-menu-item-group>      <el-menu-item-group title="分组2">        <el-menu-item index="2-3">选项3</el-menu-item>      </el-menu-item-group>      <el-submenu index="2-4">        <template slot="title">选项4</template>        <el-menu-item index="2-4-1">选项4-1</el-menu-item>      </el-submenu>    </el-submenu>    <el-submenu index="3">      <template slot="title"><i class="el-icon-setting"></i>导航三</template>      <el-menu-item-group>        <template slot="title">分组一</template>        <el-menu-item index="3-1">选项1</el-menu-item>        <el-menu-item index="3-2">选项2</el-menu-item>      </el-menu-item-group>      <el-menu-item-group title="分组2">        <el-menu-item index="3-3">选项3</el-menu-item>      </el-menu-item-group>      <el-submenu index="3-4">        <template slot="title">选项4</template>        <el-menu-item index="3-4-1">选项4-1</el-menu-item>      </el-submenu>    </el-submenu>  </el-menu></template><script>  export default {    name: "Aside"  }</script><style scoped></style></code></pre><ul><li>Header.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <div>    <el-dropdown>      <i class="el-icon-setting" style="margin-right: 15px"></i>      <el-dropdown-menu slot="dropdown">        <el-dropdown-item>查看</el-dropdown-item>        <el-dropdown-item>新增</el-dropdown-item>        <el-dropdown-item>删除</el-dropdown-item>      </el-dropdown-menu>    </el-dropdown>    <span>王小虎</span>  </div></template><script>  export default {    name: "Header"  }</script><style scoped></style></code></pre><ul><li>Main.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <el-table :data="tableData">    <el-table-column prop="date" label="日期" width="140">    </el-table-column>    <el-table-column prop="name" label="姓名" width="120">    </el-table-column>    <el-table-column prop="address" label="地址">    </el-table-column>  </el-table></template><script>  export default {    name: "Main",    data() {      const item = {        date: '2016-05-02',        name: '王小虎',        address: '上海市普陀区金沙江路 1518 弄'      };      return {        tableData: Array(10).fill(item)      }    }  }</script><style scoped></style></code></pre><ul><li>Index.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <el-container style="height: 100%; border: 1px solid #eee">    <el-aside width="200px" style="background-color: rgb(238, 241, 246); height: 100%">      <Aside></Aside>    </el-aside>    <el-container style="height: 100%">      <el-header style="text-align: right; font-size: 12px;">        <Header></Header>      </el-header>      <el-main style="height: 100%">        <Main></Main>      </el-main>    </el-container>  </el-container></template><script>  import Aside from "@/components/Aside.vue";  import Header from "@/components/Header.vue";  import Main from "@/components/Main.vue";  export default {    name: "Index",    components: {Header, Aside, Main},  }</script><style scoped>  .el-header {    background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;  }  .el-main {    padding: 5px;  }</style></code></pre><h2 id="十二、编写Header头部页面"><a href="#十二、编写Header头部页面" class="headerlink" title="十二、编写Header头部页面"></a>十二、编写Header头部页面</h2><pre class=" language-vue"><code class="language-vue"><template>  <div style="display: flex;">    <div style="margin-top: 2px;">      <i class="el-icon-s-fold" style="font-size: 20px;"></i>    </div>    <div style="flex: 1; text-align: center; font-size: 34px">      <span>欢迎来到仓库管理系统</span>    </div>    <el-dropdown>      <span style="margin-right: 5px;">王小虎</span><i class="el-icon-arrow-down"></i>      <el-dropdown-menu slot="dropdown">        <el-dropdown-item @click.native="toUser">个人中心</el-dropdown-item>        <el-dropdown-item @click.native="logout">退出登录</el-dropdown-item>      </el-dropdown-menu>    </el-dropdown>  </div></template><script>  export default {    name: "Header",    methods: {      toUser() {        console.log('to_user')      },      logout() {        console.log('logout')      }    }  }</script><style scoped></style></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012162907099.png"></p><h2 id="十三、编写菜单导航页面"><a href="#十三、编写菜单导航页面" class="headerlink" title="十三、编写菜单导航页面"></a>十三、编写菜单导航页面</h2><pre class=" language-vue"><code class="language-vue"><template>  <el-menu      default-active="/Home"      background-color="#545c64"      text-color="#fff"      active-text-color="#ffd04b"      style="height: 100%;">    <el-menu-item index="/Home">      <i class="el-icon-s-home"></i>      <span>首页</span>    </el-menu-item>    <el-menu-item index="/Nav1">      <i class="el-icon-s-flag"></i>      <span>导航一</span>    </el-menu-item>    <el-menu-item index="/Nav2">      <i class="el-icon-s-shop"></i>      <span>导航二</span>    </el-menu-item>  </el-menu></template><script>  export default {    name: "Aside"  }</script><style scoped></style></code></pre><p>在Index.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <el-aside width="200px" style="background-color: rgb(238, 241, 246); height: 100vh">    <Aside></Aside>  </el-aside></template><style scoped>  .el-aside {    color: #333;    margin-left: -1px;    margin-top: -1px;  }</style></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231012163127361.png"></p><h2 id="十四、菜单导航页面伸缩"><a href="#十四、菜单导航页面伸缩" class="headerlink" title="十四、菜单导航页面伸缩"></a>十四、菜单导航页面伸缩</h2><ul><li>Aside.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <el-menu      default-active="/Home"      background-color="#545c64"      text-color="#fff"      active-text-color="#ffd04b"      style="height: 100%;"      :collapse="isCollapse"      :collapse-transition="false"  >    <el-menu-item index="/Home">      <i class="el-icon-s-home"></i>      <span slot="title">首页</span>    </el-menu-item>    <el-menu-item index="/Nav1">      <i class="el-icon-s-flag"></i>      <span slot="title">导航一</span>    </el-menu-item>    <el-menu-item index="/Nav2">      <i class="el-icon-s-shop"></i>      <span slot="title">导航二</span>    </el-menu-item>  </el-menu></template><script>  export default {    name: "Aside",    data() {      return {      }    },    props: {      isCollapse: Boolean    }  }</script><style scoped></style></code></pre><ul><li>Index.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <el-container style="height: 100%; border: 1px solid #eee">    <el-aside :width="aside_width" style="background-color: rgb(238, 241, 246); height: 100vh">      <Aside :isCollapse="isCollapse"></Aside>    </el-aside>    <el-container style="height: 100%">      <el-header style="text-align: right; font-size: 12px; border-bottom: rgba(168,168,168,0.3) 1px solid;">        <Header @doCollapse="doCollapse" :icon="icon"></Header>      </el-header>      <el-main style="height: 100%">        <Main></Main>      </el-main>    </el-container>  </el-container></template><script>  import Aside from "@/components/Aside.vue";  import Header from "@/components/Header.vue";  import Main from "@/components/Main.vue";  export default {    name: "Index",    components: {Header, Aside, Main},    data() {      return {        isCollapse: false,        aside_width: '200px',        icon: 'el-icon-s-fold'      }    },    methods: {      doCollapse() {        console.log(1111)        this.isCollapse = !this.isCollapse        if (!this.isCollapse) {          this.aside_width = '200px'          this.icon = 'el-icon-s-fold'        } else {          this.aside_width = '64px'          this.icon = 'el-icon-s-unfold'        }      }    }  }</script><style scoped>  .el-header {    #background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;    margin-left: -1px;    margin-top: -1px;  }  .el-main {    padding: 5px;  }</style></code></pre><ul><li>Header.vue</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <div style="display: flex;">    <div style="margin-top: 2px;">      <i :class="icon" style="font-size: 20px; cursor: pointer;" @click="collapse"></i>    </div>    <div style="flex: 1; text-align: center; font-size: 34px">      <span>欢迎来到仓库管理系统</span>    </div>    <el-dropdown>      <span style="margin-right: 5px;">王小虎</span><i class="el-icon-arrow-down"></i>      <el-dropdown-menu slot="dropdown">        <el-dropdown-item @click.native="toUser">个人中心</el-dropdown-item>        <el-dropdown-item @click.native="logout">退出登录</el-dropdown-item>      </el-dropdown-menu>    </el-dropdown>  </div></template><script>  export default {    name: "Header",    props: {      icon: String    },    methods: {      toUser() {        console.log('to_user')      },      logout() {        console.log('logout')      },      collapse() {        this.$emit('doCollapse')      }    }  }</script><style scoped></style></code></pre><h2 id="十五、安装axios与跨域处理"><a href="#十五、安装axios与跨域处理" class="headerlink" title="十五、安装axios与跨域处理"></a>十五、安装axios与跨域处理</h2><h3 id="1、安装axios"><a href="#1、安装axios" class="headerlink" title="1、安装axios"></a>1、安装axios</h3><p>在终端输入如下命令：</p><pre class=" language-shell"><code class="language-shell">npm install axios --save</code></pre><h3 id="2、在main-js中全局引入axios"><a href="#2、在main-js中全局引入axios" class="headerlink" title="2、在main.js中全局引入axios"></a>2、在main.js中全局引入axios</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-ui/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'./assets/global.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axiosVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre><h3 id="3、跨域处理"><a href="#3、跨域处理" class="headerlink" title="3、跨域处理"></a>3、跨域处理</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>CorsRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurer<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CorsConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>     <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span>CorsRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//是否发送Cookie</span>                <span class="token punctuation">.</span><span class="token function">allowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//放行哪些原始域</span>                <span class="token punctuation">.</span><span class="token function">allowedOriginPatterns</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"PUT"</span><span class="token punctuation">,</span> <span class="token string">"DELETE"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">exposedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="4、使用axios访问后端请求"><a href="#4、使用axios访问后端请求" class="headerlink" title="4、使用axios访问后端请求"></a>4、使用axios访问后端请求</h3><p>在Main.vue中：</p><pre class=" language-vue"><code class="language-vue"><script>  export default {    name: "Main",    data() {      const item = {        date: '2016-05-02',        name: '王小虎',        address: '上海市普陀区金沙江路 1518 弄'      };      return {        tableData: Array(10).fill(item)      }    },    methods: {      loadGet() {        this.$axios.get('http://localhost:8090/user/list').then(res=>res.data).then(res=>{          console.log(res)        })      },      loadPost() {        this.$axios.post('http://localhost:8090/user/listPageC',{}).then(res=>res.data).then(res=>{          console.log(res)        })      }    },    beforeMount() {      // this.loadGet()      this.loadPost()    }  }</script></code></pre><h3 id="5、将地址设置为全局"><a href="#5、将地址设置为全局" class="headerlink" title="5、将地址设置为全局"></a>5、将地址设置为全局</h3><p>在main.js中：</p><pre class=" language-javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$httpUrl <span class="token operator">=</span> <span class="token string">'http://localhost:8090'</span></code></pre><p>之后就可以在Main.vue中通过httpUrl调用地址了：</p><pre class=" language-vue"><code class="language-vue">this.$axios.get(this.$httpUrl+'/user/list').then(res=>res.data).then(res=>{  console.log(res)})</code></pre><h2 id="十六、列表展示"><a href="#十六、列表展示" class="headerlink" title="十六、列表展示"></a>十六、列表展示</h2><h3 id="1、列表数据"><a href="#1、列表数据" class="headerlink" title="1、列表数据"></a>1、列表数据</h3><p>在Main.vue中：</p><pre class=" language-vue"><code class="language-vue">data() {  return {    tableData: []  }}loadPost() {  this.$axios.post(this.$httpUrl+'/user/listPageC',{}).then(res=>res.data).then(res=>{    console.log(res)    this.tableData = res  })}</code></pre><h3 id="2、用tag转换列"><a href="#2、用tag转换列" class="headerlink" title="2、用tag转换列"></a>2、用tag转换列</h3><pre class=" language-vue"><code class="language-vue"><el-table :data="tableData">  <el-table-column prop="id" label="ID" width="80">  </el-table-column>  <el-table-column prop="no" label="账号" width="180">  </el-table-column>  <el-table-column prop="name" label="姓名" width="180">  </el-table-column>  <el-table-column prop="age" label="年龄" width="120">  </el-table-column>  <el-table-column prop="sex" label="性别" width="120">    <template slot-scope="scope">      <el-tag          :type="scope.row.sex === 1 ? 'primary' : 'success'"          disable-transitions>{{scope.row.sex === 1 ? '男' : '女'}}</el-tag>    </template>  </el-table-column>  <el-table-column prop="roleId" label="角色" width="120">    <template slot-scope="scope">      <el-tag          :type="scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')"          disable-transitions>{{scope.row.roleId === 0 ? '超级管理员' : (scope.row.roleId === 1 ? '管理员' : '普通用户')}}</el-tag>    </template>  </el-table-column>  <el-table-column prop="phone" label="电话" width="200">  </el-table-column>  <el-table-column prop="operation" label="操作">  </el-table-column></el-table></code></pre><h3 id="3、header-cell-style设置表头样式"><a href="#3、header-cell-style设置表头样式" class="headerlink" title="3、header-cell-style设置表头样式"></a>3、header-cell-style设置表头样式</h3><pre class=" language-vue"><code class="language-vue"><el-table  :data="tableData"  :header-cell-style="{background: '#f3f6fd', color: '#555'}"></code></pre><h3 id="4、加上边框"><a href="#4、加上边框" class="headerlink" title="4、加上边框"></a>4、加上边框</h3><pre class=" language-vue"><code class="language-vue"><el-table  :data="tableData"  :header-cell-style="{background: '#f3f6fd', color: '#555'}"  border></code></pre><h3 id="5、按钮（编辑、删除）"><a href="#5、按钮（编辑、删除）" class="headerlink" title="5、按钮（编辑、删除）"></a>5、按钮（编辑、删除）</h3><pre class=" language-vue"><code class="language-vue"><el-table-column prop="operation" label="操作">  <el-button size="small" type="success">编辑</el-button>  <el-button size="small" type="danger">删除</el-button></el-table-column></code></pre><h3 id="6、后端返回结果封装（Result）"><a href="#6、后端返回结果封装（Result）" class="headerlink" title="6、后端返回结果封装（Result）"></a>6、后端返回结果封装（Result）</h3><p>在UserController中：</p><pre class=" language-Java"><code class="language-Java">@PostMapping("/listPageC")public Result listPageC(@RequestBody QueryPageParam query) {    Page<User> page = new Page<>();    page.setCurrent(query.getPageNum());    page.setSize(query.getPageSize());    IPage<User> result = userService.pageC(page);    System.out.println("total===" + result.getTotal());    return Result.success(result.getTotal(), result.getRecords());}</code></pre><p>在Main.vue中：</p><pre class=" language-vue"><code class="language-vue">loadPost() {  this.$axios.post(this.$httpUrl+'/user/listPageC',{}).then(res=>res.data).then(res=>{    console.log(res)    if (res.code === 200) {      this.tableData = res.data    }  })}</code></pre><h2 id="十七、分页处理"><a href="#十七、分页处理" class="headerlink" title="十七、分页处理"></a>十七、分页处理</h2><p>在Main.vue中加入分页组件：</p><pre class=" language-vue"><code class="language-vue"><el-pagination  @size-change="handleSizeChange"  @current-change="handleCurrentChange"  :current-page="pageNum"  :page-sizes="[10, 20, 50, 100]"  :page-size="pageSize"  layout="total, sizes, prev, pager, next, jumper"  :total="total"></el-pagination></code></pre><p>在Main.vue中写一下handleSizeChange、handleCurrentChange方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    tableData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    total<span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">handleSizeChange</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`每页 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 条`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">=</span> val  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">handleCurrentChange</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`当前页: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum <span class="token operator">=</span> val  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/listPageC'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>    pageSize<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tableData <span class="token operator">=</span> res<span class="token punctuation">.</span>data      <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>total    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>记得要在QueryPageParam中修改一下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> HashMap param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="十八、查询处理"><a href="#十八、查询处理" class="headerlink" title="十八、查询处理"></a>十八、查询处理</h2><h3 id="1、增加输入框、下拉框、查询重置按钮"><a href="#1、增加输入框、下拉框、查询重置按钮" class="headerlink" title="1、增加输入框、下拉框、查询重置按钮"></a>1、增加输入框、下拉框、查询重置按钮</h3><pre class=" language-vue"><code class="language-vue"><div style="margin-bottom: 5px;">  <el-input v-model="name" placeholder="请输入姓名" suffix-icon="el-icon-search" style="width: 200px;"         @keyup.enter.native="loadPost"></el-input>  <el-select v-model="sex" placeholder="请选择性别" style="margin-left: 5px;">    <el-option      v-for="item in sexs"      :key="item.value"      :label="item.label"      :value="item.value">    </el-option>  </el-select>  <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>  <el-button type="success" @click="resetParam">重置</el-button></div></code></pre><h3 id="2、在data中增加name、sex、sexs"><a href="#2、在data中增加name、sex、sexs" class="headerlink" title="2、在data中增加name、sex、sexs"></a>2、在data中增加name、sex、sexs</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    tableData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    total<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    sexs<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        value<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token string">'男'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        value<span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token string">'女'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、修改methods"><a href="#3、修改methods" class="headerlink" title="3、修改methods"></a>3、修改methods</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/listPageCC1'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>    pageSize<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum<span class="token punctuation">,</span>    param<span class="token punctuation">:</span> <span class="token punctuation">{</span>      name<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>      sex<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sex    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tableData <span class="token operator">=</span> res<span class="token punctuation">.</span>data      <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>total    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">resetParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">}</span></code></pre><h2 id="十九、新增"><a href="#十九、新增" class="headerlink" title="十九、新增"></a>十九、新增</h2><h3 id="1、新增按钮"><a href="#1、新增按钮" class="headerlink" title="1、新增按钮"></a>1、新增按钮</h3><p>在Main.vue中：</p><pre class=" language-vue"><code class="language-vue"><el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button></code></pre><h3 id="2、弹出窗口"><a href="#2、弹出窗口" class="headerlink" title="2、弹出窗口"></a>2、弹出窗口</h3><p>新增Dialog组件：</p><pre class=" language-vue"><code class="language-vue"><el-dialog  title="提示"  :visible.sync="centerDialogVisible"  width="30%"  :before-close="handleClose"  center>  <span>需要注意的是内容是默认不居中的</span>  <span slot="footer" class="dialog-footer">    <el-button @click="centerDialogVisible = false">取 消</el-button>    <el-button type="primary" @click="centerDialogVisible = false">确 定</el-button>  </span></el-dialog>data() {  return {    tableData: [],    pageSize: 10,    pageNum: 1,    total: 0,    name: '',    sex: '',    sexs: [      {        value: '1',        label: '男'      }, {        value: '0',        label: '女'      }    ],    centerDialogVisible: false  }}add() {  this.centerDialogVisible = true}handleClose(done) {  this.$confirm('确认关闭？')      .then(() => {        done();      })      .catch(() => {});}</code></pre><h3 id="3、编写表单"><a href="#3、编写表单" class="headerlink" title="3、编写表单"></a>3、编写表单</h3><pre class=" language-vue"><code class="language-vue"><el-dialog  title="新增"  :visible.sync="centerDialogVisible"  width="30%"  :before-close="handleClose"  center>  <el-form ref="form" :model="form" label-width="120px">    <el-form-item label="账号">      <el-col :span="30">        <el-input v-model="form.no"></el-input>      </el-col>    </el-form-item>    <el-form-item label="姓名">      <el-col :span="30">        <el-input v-model="form.name"></el-input>      </el-col>    </el-form-item>    <el-form-item label="密码">      <el-col :span="30">        <el-input v-model="form.password"></el-input>      </el-col>    </el-form-item>    <el-form-item label="年龄">      <el-col :span="30">        <el-input v-model="form.age"></el-input>      </el-col>    </el-form-item>    <el-form-item label="性别">      <el-radio-group v-model="form.sex">        <el-radio label="1">男</el-radio>        <el-radio label="0">女</el-radio>      </el-radio-group>    </el-form-item>    <el-form-item label="电话">      <el-col :span="30">        <el-input v-model="form.phone"></el-input>      </el-col>    </el-form-item>  </el-form>  <span slot="footer" class="dialog-footer">    <el-button @click="centerDialogVisible = false">取 消</el-button>    <el-button type="primary" @click="save">确 定</el-button>  </span></el-dialog>data() {  return {    tableData: [],    pageSize: 10,    pageNum: 1,    total: 0,    name: '',    sex: '',    sexs: [      {        value: '1',        label: '男'      }, {        value: '0',        label: '女'      }    ],    centerDialogVisible: false,    form: {      no: '',      name: '',      password: '',      age: '',      sex: '0',      phone: '',      roleId: '2'    }  }}</code></pre><h3 id="4、弹出数据（提示信息、列表刷新）"><a href="#4、弹出数据（提示信息、列表刷新）" class="headerlink" title="4、弹出数据（提示信息、列表刷新）"></a>4、弹出数据（提示信息、列表刷新）</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/save'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'新增成功'</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'success'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>centerDialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"新增失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="5、数据的检查"><a href="#5、数据的检查" class="headerlink" title="5、数据的检查"></a>5、数据的检查</h3><pre class=" language-vue"><code class="language-vue"><el-form ref="form" :model="form" :rules="rules" label-width="120px">  <el-form-item label="账号" prop="no">    <el-col :span="30">      <el-input v-model="form.no"></el-input>    </el-col>  </el-form-item>  <el-form-item label="姓名" prop="name">    <el-col :span="30">      <el-input v-model="form.name"></el-input>    </el-col>  </el-form-item>  <el-form-item label="密码" prop="password">    <el-col :span="30">      <el-input v-model="form.password"></el-input>    </el-col>  </el-form-item>  <el-form-item label="年龄" prop="age">    <el-col :span="30">      <el-input v-model="form.age"></el-input>    </el-col>  </el-form-item>  <el-form-item label="性别">    <el-radio-group v-model="form.sex">      <el-radio label="1">男</el-radio>      <el-radio label="0">女</el-radio>    </el-radio-group>  </el-form-item>  <el-form-item label="电话" prop="phone">    <el-col :span="30">      <el-input v-model="form.phone"></el-input>    </el-col>  </el-form-item></el-form></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> checkAge <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">></span> <span class="token number">150</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'年龄输入过大'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    tableData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    total<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    sexs<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        value<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token string">'男'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        value<span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token string">'女'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    centerDialogVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    form<span class="token punctuation">:</span> <span class="token punctuation">{</span>      no<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      age<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      sex<span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>      phone<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      roleId<span class="token punctuation">:</span> <span class="token string">'2'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">{</span>      no<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入账号'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> min<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 8 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入姓名'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      password<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入密码'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> min<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 8 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      age<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入年龄'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> min<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 3 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> pattern<span class="token punctuation">:</span> <span class="token regex">/^([1-9][0-9]*){1,3}$/</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'年龄必须为正整数'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> validator<span class="token punctuation">:</span> checkAge<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      phone<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'手机号不能为空'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> pattern<span class="token punctuation">:</span> <span class="token regex">/^1[3|4|5|6|7|8|9][0-9]\d{8}$/</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入正确的手机号码'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/save'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            message<span class="token punctuation">:</span> <span class="token string">'新增成功'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'success'</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>centerDialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"新增失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error submit!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">resetForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">resetFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="6、账号的唯一验证"><a href="#6、账号的唯一验证" class="headerlink" title="6、账号的唯一验证"></a>6、账号的唯一验证</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> checkDuplicate <span class="token operator">=</span> <span class="token punctuation">(</span>rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/findByNo?no='</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>no<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'账号已经存在'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>在UserController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/findByNo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">findByNo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String no<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getNo<span class="token punctuation">,</span> no<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript">no<span class="token punctuation">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'请输入账号'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> min<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string">'长度在 3 到 8 个字符'</span><span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> validator<span class="token punctuation">:</span> checkDuplicate<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> <span class="token string">'blur'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="7、表单重置"><a href="#7、表单重置" class="headerlink" title="7、表单重置"></a>7、表单重置</h3><p><strong>使用resetFields的注意事项：设置prop属性，该属性值要与model值相同，如果不设置这个属性，resetFields是不生效的</strong></p><h2 id="二十、编辑"><a href="#二十、编辑" class="headerlink" title="二十、编辑"></a>二十、编辑</h2><pre class=" language-vue"><code class="language-vue"><el-table-column prop="operation" label="操作">  <template slot-scope="scope">    <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>    <el-button size="small" type="danger" @click="del">删除</el-button>  </template></el-table-column></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">mod</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>centerDialogVisible <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//赋值到表单</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>id <span class="token operator">=</span> row<span class="token punctuation">.</span>id    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>no <span class="token operator">=</span> row<span class="token punctuation">.</span>no    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>name <span class="token operator">=</span> row<span class="token punctuation">.</span>name    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>age <span class="token operator">=</span> row<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">''</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>sex <span class="token operator">=</span> row<span class="token punctuation">.</span>sex <span class="token operator">+</span> <span class="token string">''</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>phone <span class="token operator">=</span> row<span class="token punctuation">.</span>phone    <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>roleId <span class="token operator">=</span> row<span class="token punctuation">.</span>roleId  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">doSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/save'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'新增成功'</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'success'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>centerDialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"新增失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">doMod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/update'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'新增成功'</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'success'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>centerDialogVisible <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"新增失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doMod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error submit!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在UserController中：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//更新</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="二十一、删除"><a href="#二十一、删除" class="headerlink" title="二十一、删除"></a>二十一、删除</h2><pre class=" language-vue"><code class="language-vue"><el-table-column prop="operation" label="操作">  <template slot-scope="scope">    <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>    <el-popconfirm      title="确定删除吗？"      @confirm="del(scope.row.id)"      style="margin-left: 5px;"    >      <el-button slot="reference" size="small" type="danger">删除</el-button>    </el-popconfirm>  </template></el-table-column></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">del</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/user/del?id='</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'删除成功'</span><span class="token punctuation">,</span>        type<span class="token punctuation">:</span> <span class="token string">'success'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"删除失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>在UserController中：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//删除</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">del</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="二十二、登录"><a href="#二十二、登录" class="headerlink" title="二十二、登录"></a>二十二、登录</h2><h3 id="1、登录页面"><a href="#1、登录页面" class="headerlink" title="1、登录页面"></a>1、登录页面</h3><pre class=" language-vue"><code class="language-vue"><template>  <div class="loginBody">    <div class="loginDiv">      <div class="login-content">        <h1 class="login-title">用户登录</h1>        <el-form :model="loginForm" label-width="100px"                 :rules="rules" ref="loginForm">          <el-form-item label="账号" prop="no">            <el-input style="width: 200px;" type="text" v-model="loginForm.no"                      autocomplete="off" size="small"></el-input>          </el-form-item>          <el-form-item label="密码" prop="password">            <el-input style="width: 200px;" type="password" v-model="loginForm.password"                      show-password autocomplete="off" size="small" @keyup.enter.native="confirm">            </el-input>          </el-form-item>          <el-form-item>            <el-button type="primary" @click="confirm" :disabled="confirm_disabled">确 定</el-button>          </el-form-item>        </el-form>      </div>    </div>  </div></template><script>export default {  name: "Login",  data() {    return {      confirm_disabled: false,      loginForm: {        no: '',        password: ''      },      rules: {        no: [          { required: true, message: '请输入账号', trigger: 'blur' }        ],        password: [          { required: true, message: '请输入密码', trigger: 'blur'}        ]      }    }  },  methods: {    confirm() {      this.confirm_disabled = true      this.$refs.loginForm.validate((valid) => {        if (valid) {  //valid成功为true，失败为false          //去后台验证用户名密码          this.$axios.post(this.$httpUrl+'/user/login', this.loginForm).then(res=>res.data).then(res=>{            console.log(res)            if (res.code === 200) {              //存储              sessionStorage.setItem("CurUser", JSON.stringify(res.data))              //跳转到主页              this.$router.replace("/Index")            } else {              this.confirm_disabled = false              alert('校验失败，用户名或密码错误！')              return false            }          })        } else {          this.confirm_disabled = false          console.log('校验失败')          return false        }      })    }  }}</script><style scoped>  .loginBody {    position: absolute;    width: 100%;    height: 100%;    background-color: #B3C0D1;  }  .loginDiv {    position: absolute;    top: 50%;    left: 50%;    margin-top: -200px;    margin-left: -250px;    width: 450px;    height: 330px;    background: #fff;    border-radius: 5%;  }  .login-title {    margin: 20px 0;    text-align: center;  }  .login-content {    width: 400px;    height: 250px;    position: absolute;    top: 25px;    left: 25px;  }</style></code></pre><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231015162634918.png"></p><h3 id="2、后台查询代码"><a href="#2、后台查询代码" class="headerlink" title="2、后台查询代码"></a>2、后台查询代码</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//登录</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getNo<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getPassword<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3、登录页面的路由"><a href="#3、登录页面的路由" class="headerlink" title="3、登录页面的路由"></a>3、登录页面的路由</h3><ul><li>安装路由插件</li></ul><pre class=" language-shell"><code class="language-shell">npm i vue-router@3.5.4</code></pre><ul><li>创建路由文件</li></ul><p>在wms-web文件夹的src目录下新建router/index.js：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> VueRouter  <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Login.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/Index'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'index'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Index.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>    routes<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span></code></pre><ul><li>main.js注册</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'element-ui/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'./assets/global.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token punctuation">;</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"@/router"</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axiosVue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$httpUrl <span class="token operator">=</span> <span class="token string">'http://localhost:8090'</span><span class="token comment" spellcheck="true">// Vue.use(ElementUI);</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">,</span> <span class="token punctuation">{</span>size<span class="token punctuation">:</span> <span class="token string">'small'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  router<span class="token punctuation">,</span>  render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre><ul><li>在App.vue中</li></ul><pre class=" language-vue"><code class="language-vue"><template>  <div id="app">    <router-view/>  </div></template><script>export default {  name: 'App',  components: {  }}</script><style>  html, body, #app {    height: 100%;  }</style></code></pre><h2 id="二十三、退出登录"><a href="#二十三、退出登录" class="headerlink" title="二十三、退出登录"></a>二十三、退出登录</h2><h3 id="1、展示名字"><a href="#1、展示名字" class="headerlink" title="1、展示名字"></a>1、展示名字</h3><pre class=" language-vue"><code class="language-vue"><el-dropdown>  <span style="margin-right: 5px;">{{ user.name }}</span><i class="el-icon-arrow-down"></i>  <el-dropdown-menu slot="dropdown">    <el-dropdown-item @click.native="toUser">个人中心</el-dropdown-item>    <el-dropdown-item @click.native="logout">退出登录</el-dropdown-item>  </el-dropdown-menu></el-dropdown>data() {  return {    user: JSON.parse(sessionStorage.getItem('CurUser'))  }}</code></pre><h3 id="2、退出登录事件"><a href="#2、退出登录事件" class="headerlink" title="2、退出登录事件"></a>2、退出登录事件</h3><pre class=" language-vue"><code class="language-vue"><el-dropdown-item @click.native="logout">退出登录</el-dropdown-item></code></pre><h3 id="3、退出跳转、清空相关数据"><a href="#3、退出跳转、清空相关数据" class="headerlink" title="3、退出跳转、清空相关数据"></a>3、退出跳转、清空相关数据</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'logout'</span><span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>  sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="4、退出确认"><a href="#4、退出确认" class="headerlink" title="4、退出确认"></a>4、退出确认</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'logout'</span><span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">'您确定要退出登录吗？'</span><span class="token punctuation">,</span> <span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    confirmButtonText<span class="token punctuation">:</span> <span class="token string">'确定'</span><span class="token punctuation">,</span>    type<span class="token punctuation">:</span> <span class="token string">'warning'</span><span class="token punctuation">,</span>    center<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'success'</span><span class="token punctuation">,</span>      message<span class="token punctuation">:</span> <span class="token string">'退出登录成功'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>    sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span>      message<span class="token punctuation">:</span> <span class="token string">'已取消退出登录'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="二十四、首页个人中心"><a href="#二十四、首页个人中心" class="headerlink" title="二十四、首页个人中心"></a>二十四、首页个人中心</h2><h3 id="1、编写页面"><a href="#1、编写页面" class="headerlink" title="1、编写页面"></a>1、编写页面</h3><pre class=" language-vue"><code class="language-vue"><template>  <div>    <h1 style="font-size: 50px; text-align: center; margin-bottom: 10px;">{{'欢迎你！'+user.name}}</h1>    <el-descriptions style="margin-left: 30px;" title="个人中心" :column="2" size="40" border>      <el-descriptions-item>        <template slot="label">          <i class="el-icon-s-custom"></i>          账号        </template>        {{ user.no }}      </el-descriptions-item>      <el-descriptions-item>        <template slot="label">          <i class="el-icon-mobile-phone"></i>          电话        </template>        {{ user.phone }}      </el-descriptions-item>      <el-descriptions-item>        <template slot="label">          <i class="el-icon-location-outline"></i>          性别        </template>        <el-tag          :type="user.sex === '1' ? 'primary' : 'danger'"          disable-transitions><i :class="user.sex==='1'?'el-icon-male':'el-icon-female'"></i>{{user.sex==='1'?'男':'女'}}</el-tag>      </el-descriptions-item>      <el-descriptions-item>        <template slot="label">          <i class="el-icon-tickets"></i>          角色        </template>        <el-tag            type="success"            disable-transitions>{{user.roleId==='0'?'超级管理员':(user.roleId==='1'?'管理员':'普通用户')}}</el-tag>      </el-descriptions-item>    </el-descriptions><!--    <DateUtils></DateUtils>-->  </div></template><script>// import DateUtils from "./DateUtils";export default {  name: "Home",  // components: {DateUtils},  data() {    return {      user: JSON.parse(sessionStorage.getItem('CurUser'))    }  },  computed: {  },  methods: {    // init() {    //   this.user = JSON.parse(sessionStorage.getItem('CurUser'))    // }  }}</script><style scoped></style></code></pre><h3 id="2、路由跳转"><a href="#2、路由跳转" class="headerlink" title="2、路由跳转"></a>2、路由跳转</h3><p>在index.js中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> VueRouter  <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Login.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/Index'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'index'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Index.vue'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token punctuation">:</span> <span class="token string">'/Home'</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>                meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  title<span class="token punctuation">:</span> <span class="token string">'首页'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Home.vue'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>    routes<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> VueRouterPush <span class="token operator">=</span> VueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>pushVueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> VueRouterPush<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span></code></pre><p>在Header.vue中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/Home"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>在Index.vue中：</p><pre class=" language-vue"><code class="language-vue"><el-main style="height: 100%">  <router-view/></el-main></code></pre><h3 id="3、路由错误解决"><a href="#3、路由错误解决" class="headerlink" title="3、路由错误解决"></a>3、路由错误解决</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> VueRouterPush <span class="token operator">=</span> VueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>pushVueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> VueRouterPush<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> err<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="二十五、菜单跳转"><a href="#二十五、菜单跳转" class="headerlink" title="二十五、菜单跳转"></a>二十五、菜单跳转</h2><h3 id="1、菜单增加router、高亮"><a href="#1、菜单增加router、高亮" class="headerlink" title="1、菜单增加router、高亮"></a>1、菜单增加router、高亮</h3><pre class=" language-vue"><code class="language-vue"><template>  <el-menu      default-active="/Home"      background-color="#545c64"      text-color="#fff"      active-text-color="#ffd04b"      style="height: 100%;"      :collapse="isCollapse"      :collapse-transition="false"      router  >    <el-menu-item index="/Home">      <i class="el-icon-s-home"></i>      <span slot="title">首页</span>    </el-menu-item>    <el-menu-item index="/Nav1">      <i class="el-icon-s-flag"></i>      <span slot="title">导航一</span>    </el-menu-item>    <el-menu-item index="/Nav2">      <i class="el-icon-s-shop"></i>      <span slot="title">导航二</span>    </el-menu-item>  </el-menu></template></code></pre><h3 id="2、配置子菜单"><a href="#2、配置子菜单" class="headerlink" title="2、配置子菜单"></a>2、配置子菜单</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Login.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/Index'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'index'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Index.vue'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token punctuation">:</span> <span class="token string">'/Home'</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>                meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  title<span class="token punctuation">:</span> <span class="token string">'首页'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Home.vue'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                path<span class="token punctuation">:</span> <span class="token string">'/Admin'</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span> <span class="token string">'admin'</span><span class="token punctuation">,</span>                meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    title<span class="token punctuation">:</span> <span class="token string">'管理员管理'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/admin/AdminManage.vue'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                path<span class="token punctuation">:</span> <span class="token string">'/User'</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">,</span>                meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    title<span class="token punctuation">:</span> <span class="token string">'用户管理'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/user/UserManage.vue'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="3、模拟动态menu"><a href="#3、模拟动态menu" class="headerlink" title="3、模拟动态menu"></a>3、模拟动态menu</h3><pre class=" language-vue"><code class="language-vue"><el-menu-item :index="'/'+item.menuClick" v-for="(item, i) in menu" :key="i">  <i :class="item.menuIcon"></i>  <span slot="title">{{ item.menuName }}</span></el-menu-item>data() {  return {    menu: [      {        menuClick: 'Admin',        menuName: '管理员管理',        menuIcon: 'el-icon-s-custom'      },      {        menuClick: 'User',        menuName: '用户管理',        menuIcon: 'el-icon-user-solid'      }    ]  }}</code></pre><h2 id="二十六、动态路由"><a href="#二十六、动态路由" class="headerlink" title="二十六、动态路由"></a>二十六、动态路由</h2><h3 id="1、设计menu表和数据"><a href="#1、设计menu表和数据" class="headerlink" title="1、设计menu表和数据"></a>1、设计menu表和数据</h3><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE `menu` (    `id` int(11) NOT NULL,    `menuCode` varchar(8) DEFAULT NULL COMMENT '菜单编码',    `menuName` varchar(16) DEFAULT NULL COMMENT '菜单名字',    `menuLevel` varchar(2) DEFAULT NULL COMMENT '菜单级别',    `menuParentCode` varchar(8) DEFAULT NULL COMMENT '菜单的父code',    `menuClick` varchar(16) DEFAULT NULL COMMENT '点击触发的函数',    `menuRight` varchar(8) DEFAULT NULL COMMENT '权限 0超级管理员，1管理员，2普通用户，可以用逗号组合使用',    `menuComponent` varchar(200) DEFAULT NULL,    `menuIcon` varchar(100) DEFAULT NULL,    PRIMARY KEY(`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;BEGIN;INSERT INTO `menu` VALUES (1, '001', '管理员管理', '1', NULL, 'Admin', '0', 'admin/AdminManage.vue', 'el-icon-s-custom');INSERT INTO `menu` VALUES (2, '002', '用户管理', '1', NULL, 'User', '0,1', 'user/UserManage.vue', 'el-icon-user-solid');COMMIT;</code></pre><h3 id="2、生成menu对应的后端代码"><a href="#2、生成menu对应的后端代码" class="headerlink" title="2、生成menu对应的后端代码"></a>2、生成menu对应的后端代码</h3><p>使用代码生成器自动生成即可</p><p>测试一下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Menu<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>MenuService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-16 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/menu"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MenuController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> MenuService menuService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">list</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String roleId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> list <span class="token operator">=</span> menuService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Menu<span class="token operator">:</span><span class="token operator">:</span>getMenuright<span class="token punctuation">,</span> roleId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、返回数据"><a href="#3、返回数据" class="headerlink" title="3、返回数据"></a>3、返回数据</h3><pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">//登录</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getNo<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getPassword<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        User user1 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Menu<span class="token operator">></span> menuList <span class="token operator">=</span> menuService<span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Menu<span class="token operator">:</span><span class="token operator">:</span>getMenuright<span class="token punctuation">,</span> user1<span class="token punctuation">.</span><span class="token function">getRoleId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user1<span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"menu"</span><span class="token punctuation">,</span> menuList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在Login.vue中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//存储</span>  sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"CurUser"</span><span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>menu<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//跳转到主页</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"/Index"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="4、vuex状态管理"><a href="#4、vuex状态管理" class="headerlink" title="4、vuex状态管理"></a>4、vuex状态管理</h3><ul><li>安装vuex</li></ul><pre class=" language-shell"><code class="language-shell">npm i vuex@3.0.0</code></pre><ul><li>编写store</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span>vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    state<span class="token punctuation">:</span> <span class="token punctuation">{</span>        menu<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">setMenu</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> menuList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            state<span class="token punctuation">.</span>menu <span class="token operator">=</span> menuList        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">getMenu</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> state<span class="token punctuation">.</span>menu        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><ul><li>main.js注册</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">"./store"</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  router<span class="token punctuation">,</span>  store<span class="token punctuation">,</span>  render<span class="token punctuation">:</span> h <span class="token operator">=</span><span class="token operator">></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre><h3 id="5、生成menu数据"><a href="#5、生成menu数据" class="headerlink" title="5、生成menu数据"></a>5、生成menu数据</h3><p>在Aside.vue中：</p><pre class=" language-vue"><code class="language-vue"><el-menu-item :index="'/'+item.menuclick" v-for="(item, i) in menu" :key="i">  <i :class="item.menuicon"></i>  <span slot="title">{{ item.menuname }}</span></el-menu-item>computed: {  "menu": {    get() {      return this.$store.state.menu    }  }}</code></pre><h3 id="6、生成路由数据"><a href="#6、生成路由数据" class="headerlink" title="6、生成路由数据"></a>6、生成路由数据</h3><p>在store/index.js中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">import</span> router<span class="token punctuation">,</span> <span class="token punctuation">{</span>resetRouter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/router"</span><span class="token punctuation">;</span>vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">addNewRoute</span><span class="token punctuation">(</span>menuList<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>menuList<span class="token punctuation">)</span>    <span class="token keyword">let</span> routes <span class="token operator">=</span> router<span class="token punctuation">.</span>options<span class="token punctuation">.</span>routes    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span>    routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>routeItem<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>routeItem<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">"/Index"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            menuList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>menu<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                <span class="token keyword">let</span> childRoute <span class="token operator">=</span> <span class="token punctuation">{</span>                    path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token operator">+</span>menu<span class="token punctuation">.</span>menuclick<span class="token punctuation">,</span>                    name<span class="token punctuation">:</span> menu<span class="token punctuation">.</span>menuname<span class="token punctuation">,</span>                    meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                        title<span class="token punctuation">:</span> menu<span class="token punctuation">.</span>menuname                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/'</span><span class="token operator">+</span>menu<span class="token punctuation">.</span>menucomponent<span class="token punctuation">)</span>                <span class="token punctuation">}</span>                routeItem<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>childRoute<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    state<span class="token punctuation">:</span> <span class="token punctuation">{</span>        menu<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">setMenu</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> menuList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            state<span class="token punctuation">.</span>menu <span class="token operator">=</span> menuList            <span class="token function">addNewRoute</span><span class="token punctuation">(</span>menuList<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">getMenu</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> state<span class="token punctuation">.</span>menu        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>在route/index.js中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> VueRouter  <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Login.vue'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> <span class="token string">'/Index'</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token string">'index'</span><span class="token punctuation">,</span>        component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Index.vue'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                path<span class="token punctuation">:</span> <span class="token string">'/Home'</span><span class="token punctuation">,</span>                name<span class="token punctuation">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>                meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  title<span class="token punctuation">:</span> <span class="token string">'首页'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../components/Home.vue'</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// {</span>            <span class="token comment" spellcheck="true">//     path: '/Admin',</span>            <span class="token comment" spellcheck="true">//     name: 'admin',</span>            <span class="token comment" spellcheck="true">//     meta: {</span>            <span class="token comment" spellcheck="true">//         title: '管理员管理'</span>            <span class="token comment" spellcheck="true">//     },</span>            <span class="token comment" spellcheck="true">//     component: ()=>import('../components/admin/AdminManage.vue')</span>            <span class="token comment" spellcheck="true">// },</span>            <span class="token comment" spellcheck="true">// {</span>            <span class="token comment" spellcheck="true">//     path: '/User',</span>            <span class="token comment" spellcheck="true">//     name: 'user',</span>            <span class="token comment" spellcheck="true">//     meta: {</span>            <span class="token comment" spellcheck="true">//         title: '用户管理'</span>            <span class="token comment" spellcheck="true">//     },</span>            <span class="token comment" spellcheck="true">//     component: ()=>import('../components/user/UserManage.vue')</span>            <span class="token comment" spellcheck="true">// }</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>    routes<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    router<span class="token punctuation">.</span>matcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>        routes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matcher<span class="token punctuation">}</span><span class="token keyword">const</span> VueRouterPush <span class="token operator">=</span> VueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>pushVueRouter<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> VueRouterPush<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span></code></pre><p>错误处理：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    router<span class="token punctuation">.</span>matcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>        routes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matcher<span class="token punctuation">}</span></code></pre><h2 id="二十七、管理员管理、用户管理"><a href="#二十七、管理员管理、用户管理" class="headerlink" title="二十七、管理员管理、用户管理"></a>二十七、管理员管理、用户管理</h2><p>把Main.vue中的代码复制到AdminManage.vue和UserManage.vue中，进行微调即可，如下所示：</p><p>在AdminManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入姓名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select v-model="sex" placeholder="请选择性别" style="margin-left: 5px;">        <el-option            v-for="item in sexs"            :key="item.value"            :label="item.label"            :value="item.value">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="no" label="账号" width="180">      </el-table-column>      <el-table-column prop="name" label="姓名" width="180">      </el-table-column>      <el-table-column prop="age" label="年龄" width="120">      </el-table-column>      <el-table-column prop="sex" label="性别" width="120">        <template slot-scope="scope">          <el-tag              :type="scope.row.sex === 1 ? 'primary' : 'success'"              disable-transitions>{{scope.row.sex === 1 ? '男' : '女'}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="roleId" label="角色" width="120">        <template slot-scope="scope">          <el-tag              :type="scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')"              disable-transitions>{{scope.row.roleId === 0 ? '超级管理员' : (scope.row.roleId === 1 ? '管理员' : '普通用户')}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="phone" label="电话" width="210">      </el-table-column>      <el-table-column prop="operation" label="操作">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        title="新增"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="账号" prop="no">          <el-col :span="30">            <el-input v-model="form.no"></el-input>          </el-col>        </el-form-item>        <el-form-item label="姓名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="密码" prop="password">          <el-col :span="30">            <el-input v-model="form.password"></el-input>          </el-col>        </el-form-item>        <el-form-item label="年龄" prop="age">          <el-col :span="30">            <el-input v-model="form.age"></el-input>          </el-col>        </el-form-item>        <el-form-item label="性别" prop="sex">          <el-radio-group v-model="form.sex">            <el-radio label="1">男</el-radio>            <el-radio label="0">女</el-radio>          </el-radio-group>        </el-form-item>        <el-form-item label="电话" prop="phone">          <el-col :span="30">            <el-input v-model="form.phone"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "AdminManage",  data() {    let checkAge = (rule, value, callback) => {      if (value > 150) {        callback(new Error('年龄输入过大'))      } else {        callback()      }    };    let checkDuplicate = (rule, value, callback) => {      if (this.form.id) {        return callback();      }      this.$axios.get(this.$httpUrl+'/user/findByNo?no='+this.form.no).then(res=>res.data).then(res=>{        if (res.code !== 200) {          callback()        } else {          callback(new Error('账号已经存在'))        }      })    };    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      sex: '',      sexs: [        {          value: '0',          label: '女'        },        {          value: '1',          label: '男'        }      ],      centerDialogVisible: false,      form: {        id: '',        no: '',        name: '',        password: '',        age: '',        sex: '0',        phone: '',        roleId: '1'      },      rules: {        no: [          { required: true, message: '请输入账号', trigger: 'blur' },          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' },          { validator: checkDuplicate, trigger: 'blur' }        ],        name: [          { required: true, message: '请输入姓名', trigger: 'blur' }        ],        password: [          { required: true, message: '请输入密码', trigger: 'blur' },          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }        ],        age: [          { required: true, message: '请输入年龄', trigger: 'blur' },          { min: 1, max: 3, message: '长度在 3 到 3 个字符', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数', trigger: 'blur' },          { validator: checkAge, trigger: 'blur' }        ],        phone: [          { required: true, message: '手机号不能为空', trigger: 'blur' },          { pattern: /^1[3|4|5|6|7|8|9][0-9]\d{8}$/, message: '请输入正确的手机号码', trigger: 'blur' }        ]      }    }  },  methods: {    loadGet() {      this.$axios.get(this.$httpUrl+'/user/list').then(res=>res.data).then(res=>{        console.log(res)      })    },    loadPost() {      this.$axios.post(this.$httpUrl+'/user/listPageCC1',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          sex: this.sex,          roleId: '1'        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/user/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/user/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      console.log(row)      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.no = row.no        this.form.name = row.name        this.form.password = ''        this.form.age = row.age + ''        this.form.sex = row.sex + ''        this.form.phone = row.phone        this.form.roleId = row.roleId      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/user/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    }  },  beforeMount() {    // this.loadGet()    this.loadPost()  }}</script><style scoped></style></code></pre><p>在UserManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入姓名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select v-model="sex" placeholder="请选择性别" style="margin-left: 5px;">        <el-option            v-for="item in sexs"            :key="item.value"            :label="item.label"            :value="item.value">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="no" label="账号" width="180">      </el-table-column>      <el-table-column prop="name" label="姓名" width="180">      </el-table-column>      <el-table-column prop="age" label="年龄" width="120">      </el-table-column>      <el-table-column prop="sex" label="性别" width="120">        <template slot-scope="scope">          <el-tag              :type="scope.row.sex === 1 ? 'primary' : 'success'"              disable-transitions>{{scope.row.sex === 1 ? '男' : '女'}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="roleId" label="角色" width="120">        <template slot-scope="scope">          <el-tag              :type="scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')"              disable-transitions>{{scope.row.roleId === 0 ? '超级管理员' : (scope.row.roleId === 1 ? '管理员' : '普通用户')}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="phone" label="电话" width="210">      </el-table-column>      <el-table-column prop="operation" label="操作">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        title="新增"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="账号" prop="no">          <el-col :span="30">            <el-input v-model="form.no"></el-input>          </el-col>        </el-form-item>        <el-form-item label="姓名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="密码" prop="password">          <el-col :span="30">            <el-input v-model="form.password"></el-input>          </el-col>        </el-form-item>        <el-form-item label="年龄" prop="age">          <el-col :span="30">            <el-input v-model="form.age"></el-input>          </el-col>        </el-form-item>        <el-form-item label="性别" prop="sex">          <el-radio-group v-model="form.sex">            <el-radio label="1">男</el-radio>            <el-radio label="0">女</el-radio>          </el-radio-group>        </el-form-item>        <el-form-item label="电话" prop="phone">          <el-col :span="30">            <el-input v-model="form.phone"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "UserManage",  data() {    let checkAge = (rule, value, callback) => {      if (value > 150) {        callback(new Error('年龄输入过大'))      } else {        callback()      }    };    let checkDuplicate = (rule, value, callback) => {      if (this.form.id) {        return callback();      }      this.$axios.get(this.$httpUrl+'/user/findByNo?no='+this.form.no).then(res=>res.data).then(res=>{        if (res.code !== 200) {          callback()        } else {          callback(new Error('账号已经存在'))        }      })    };    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      sex: '',      sexs: [        {          value: '0',          label: '女'        },        {          value: '1',          label: '男'        }      ],      centerDialogVisible: false,      form: {        id: '',        no: '',        name: '',        password: '',        age: '',        sex: '0',        phone: '',        roleId: '2'      },      rules: {        no: [          { required: true, message: '请输入账号', trigger: 'blur' },          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' },          { validator: checkDuplicate, trigger: 'blur' }        ],        name: [          { required: true, message: '请输入姓名', trigger: 'blur' }        ],        password: [          { required: true, message: '请输入密码', trigger: 'blur' },          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' }        ],        age: [          { required: true, message: '请输入年龄', trigger: 'blur' },          { min: 1, max: 3, message: '长度在 3 到 3 个字符', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,3}$/, message: '年龄必须为正整数', trigger: 'blur' },          { validator: checkAge, trigger: 'blur' }        ],        phone: [          { required: true, message: '手机号不能为空', trigger: 'blur' },          { pattern: /^1[3|4|5|6|7|8|9][0-9]\d{8}$/, message: '请输入正确的手机号码', trigger: 'blur' }        ]      }    }  },  methods: {    loadGet() {      this.$axios.get(this.$httpUrl+'/user/list').then(res=>res.data).then(res=>{        console.log(res)      })    },    loadPost() {      this.$axios.post(this.$httpUrl+'/user/listPageCC1',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          sex: this.sex,          roleId: '2'        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/user/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/user/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      console.log(row)      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.no = row.no        this.form.name = row.name        this.form.password = ''        this.form.age = row.age + ''        this.form.sex = row.sex + ''        this.form.phone = row.phone        this.form.roleId = row.roleId      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/user/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    }  },  beforeMount() {    // this.loadGet()    this.loadPost()  }}</script><style scoped></style></code></pre><p>在UserController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPageCC1"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">listPageCC1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    LambdaQueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getSex<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"roleId"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getRoleId<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"roleId"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> result <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="二十八、仓库管理"><a href="#二十八、仓库管理" class="headerlink" title="二十八、仓库管理"></a>二十八、仓库管理</h2><h3 id="1、表设计"><a href="#1、表设计" class="headerlink" title="1、表设计"></a>1、表设计</h3><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE `storage`(    `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',    `name` varchar(100) NOT NULL COMMENT '仓库名',    `remark` varchar(1000) DEFAULT NULL COMMENT '备注',    PRIMARY KEY(`id`)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;</code></pre><h3 id="2、根据表生成后端代码"><a href="#2、根据表生成后端代码" class="headerlink" title="2、根据表生成后端代码"></a>2、根据表生成后端代码</h3><p>使用代码生成器</p><h3 id="3、编写后端增删改查代码"><a href="#3、编写后端增删改查代码" class="headerlink" title="3、编写后端增删改查代码"></a>3、编写后端增删改查代码</h3><p>在StorageController中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>LambdaQueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>QueryPageParam<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Storage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>StorageService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/storage"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StorageController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StorageService storageService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Storage storage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> storageService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>storage<span class="token punctuation">)</span><span class="token operator">?</span>Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更新</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Storage storage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> storageService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>storage<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">del</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> storageService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>Storage<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Storage<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Storage<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> result <span class="token operator">=</span> storageService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在StorageService中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Storage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务类 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StorageService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Storage<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Storage<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在StorageServiceImpl中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Storage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>StorageMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>StorageService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ServiceImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务实现类 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StorageServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>StorageMapper<span class="token punctuation">,</span> Storage<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">StorageService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StorageMapper storageMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Storage<span class="token operator">></span> wrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> storageMapper<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在StorageMapper中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Storage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>BaseMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  Mapper 接口 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StorageMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Storage<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Storage<span class="token operator">></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>WRAPPER<span class="token punctuation">)</span> Wrapper<span class="token operator">&lt;</span>Storage<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在StorageMapper.xml中：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.StorageMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询映射结果 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Storage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询结果列 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        id, name, remark    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Storage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from storage ${ew.customSqlSegment}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h3 id="4、postman测试查询代码"><a href="#4、postman测试查询代码" class="headerlink" title="4、postman测试查询代码"></a>4、postman测试查询代码</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231018221755813.png"></p><h3 id="5、编写前端相关代码"><a href="#5、编写前端相关代码" class="headerlink" title="5、编写前端相关代码"></a>5、编写前端相关代码</h3><p>在StorageManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入仓库名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="仓库名" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        title="新增"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="仓库名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "StorageManage",  data() {    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      centerDialogVisible: false,      form: {        id: '',        name: '',        remark: ''      },      rules: {        name: [          { required: true, message: '请输入仓库名', trigger: 'blur' }        ]      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/storage/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/storage/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/storage/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/storage/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    }  },  beforeMount() {    this.loadPost()  }}</script><style scoped></style></code></pre><h2 id="二十九、物品类型管理"><a href="#二十九、物品类型管理" class="headerlink" title="二十九、物品类型管理"></a>二十九、物品类型管理</h2><h3 id="1、表设计-1"><a href="#1、表设计-1" class="headerlink" title="1、表设计"></a>1、表设计</h3><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE `goodstype`(    `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',    `name` varchar(100) NOT NULL COMMENT '分类名',    `remark` varchar(1000) DEFAULT NULL COMMENT '备注',    PRIMARY KEY(`id`)) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</code></pre><h3 id="2、根据表生成后端代码-1"><a href="#2、根据表生成后端代码-1" class="headerlink" title="2、根据表生成后端代码"></a>2、根据表生成后端代码</h3><p>使用代码生成器</p><h3 id="3、编写后端增删改查代码-1"><a href="#3、编写后端增删改查代码-1" class="headerlink" title="3、编写后端增删改查代码"></a>3、编写后端增删改查代码</h3><p>在GoodstypeController中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>LambdaQueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>QueryPageParam<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goodstype<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>GoodstypeService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/goodstype"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodstypeController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> GoodstypeService goodstypeService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Goodstype goodstype<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodstypeService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>goodstype<span class="token punctuation">)</span><span class="token operator">?</span>Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更新</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Goodstype goodstype<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodstypeService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>goodstype<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">del</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodstypeService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Goodstype<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> result <span class="token operator">=</span> goodstypeService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在GoodstypeService中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goodstype<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务类 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodstypeService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodstypeServiceImpl中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goodstype<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>GoodstypeMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>GoodstypeService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ServiceImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务实现类 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodstypeServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>GoodstypeMapper<span class="token punctuation">,</span> Goodstype<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">GoodstypeService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> GoodstypeMapper goodstypeMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> wrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodstypeMapper<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在GoodstypeMapper中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goodstype<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>BaseMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  Mapper 接口 * &lt;/p> * * @author ghost * @since 2023-10-18 */</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodstypeMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>WRAPPER<span class="token punctuation">)</span> Wrapper<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodstypeMapper.xml中：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.GoodstypeMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询映射结果 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Goodstype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询结果列 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        id, name, remark    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Goodstype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from goodstype ${ew.customSqlSegment}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h3 id="4、postman测试查询代码-1"><a href="#4、postman测试查询代码-1" class="headerlink" title="4、postman测试查询代码"></a>4、postman测试查询代码</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231018225951622.png"></p><h3 id="5、编写前端相关代码-1"><a href="#5、编写前端相关代码-1" class="headerlink" title="5、编写前端相关代码"></a>5、编写前端相关代码</h3><p>在GoodstypeManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品类别" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="物品类别" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        title="新增"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="物品类别" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "GoodstypeManage",  data() {    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      centerDialogVisible: false,      form: {        id: '',        name: '',        remark: ''      },      rules: {        name: [          { required: true, message: '请输入物品类别', trigger: 'blur' }        ]      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/goodstype/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/goodstype/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/goodstype/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/goodstype/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    }  },  beforeMount() {    this.loadPost()  }}</script><style scoped></style></code></pre><h2 id="三十、物品管理"><a href="#三十、物品管理" class="headerlink" title="三十、物品管理"></a>三十、物品管理</h2><h3 id="1、表设计-2"><a href="#1、表设计-2" class="headerlink" title="1、表设计"></a>1、表设计</h3><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE `goods`(    `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',    `name` varchar(100) NOT NULL COMMENT '货名',    `storage` int(11) NOT NULL COMMENT '仓库',    `goodsType` int(11) NOT NULL COMMENT '分类',    `count` int(11) DEFAULT NULL COMMENT '数量',    `remark` varchar(1000) DEFAULT NULL COMMENT '备注',    PRIMARY KEY(`id`)) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;</code></pre><h3 id="2、根据表生成后端代码-2"><a href="#2、根据表生成后端代码-2" class="headerlink" title="2、根据表生成后端代码"></a>2、根据表生成后端代码</h3><p>使用代码生成器</p><h3 id="3、编写后端增删改查代码-2"><a href="#3、编写后端增删改查代码-2" class="headerlink" title="3、编写后端增删改查代码"></a>3、编写后端增删改查代码</h3><p>在GoodsController中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>LambdaQueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>QueryPageParam<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goods<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>GoodsService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/goods"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> GoodsService goodsService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Goods goods<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodsService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token operator">?</span>Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更新</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">update</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Goods goods<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodsService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">del</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodsService<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">?</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>Goods<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Goods<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Goods<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> result <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在GoodsService中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goods<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务类 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Goods<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Goods<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodsServiceImpl中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goods<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>GoodsMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>GoodsService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ServiceImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务实现类 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>GoodsMapper<span class="token punctuation">,</span> Goods<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">GoodsService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> GoodsMapper goodsMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Goods<span class="token operator">></span> wrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> goodsMapper<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在GoodsMapper中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goods<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>BaseMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  Mapper 接口 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Goods<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>WRAPPER<span class="token punctuation">)</span> Wrapper<span class="token operator">&lt;</span>Goods<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodsMapper.xml中：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.GoodsMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询映射结果 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Goods<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>storage<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>storage<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goodsType<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goodstype<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询结果列 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        id, name, storage, goodsType, count, remark    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Goods<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from goods ${ew.customSqlSegment}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h3 id="4、postman测试查询代码-2"><a href="#4、postman测试查询代码-2" class="headerlink" title="4、postman测试查询代码"></a>4、postman测试查询代码</h3><p><img src="https://images-158545.oss-cn-shanghai.aliyuncs.com/image-20231019100612741.png"></p><h3 id="5、编写前端相关代码-2"><a href="#5、编写前端相关代码-2" class="headerlink" title="5、编写前端相关代码"></a>5、编写前端相关代码</h3><p>在GoodsManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="物品名" width="180">      </el-table-column>      <el-table-column prop="storage" label="仓库" width="180">      </el-table-column>      <el-table-column prop="goodstype" label="物品类别" width="180">      </el-table-column>      <el-table-column prop="count" label="数量" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        :title="title"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="物品名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="仓库" prop="storage">          <el-col :span="30">            <el-input v-model="form.storage"></el-input>          </el-col>        </el-form-item>        <el-form-item label="物品类别" prop="goodstype">          <el-col :span="30">            <el-input v-model="form.goodstype"></el-input>          </el-col>        </el-form-item>        <el-form-item label="数量" prop="count">          <el-col :span="30">            <el-input v-model="form.count"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "GoodsManage",  data() {    let checkCount = (rule, value, callback) => {      if (value > 9999) {        callback(new Error('数量输入过大'))      } else {        callback()      }    }    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      title:'',      centerDialogVisible: false,      form: {        id: '',        name: '',        storage: '',        goodstype: '',        count: '',        remark: ''      },      rules: {        name: [          { required: true, message: '请输入物品名', trigger: 'blur' }        ],        count: [          { required: true, message: '请输入数量', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,4}$/, message: '数量必须为正整数', trigger: 'blur' },          { validator: checkCount, trigger: 'blur' }        ]      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/goods/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.title='新增'      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      this.title='修改'      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.storage = row.storage        this.form.goodstype = row.goodstype        this.form.count = row.count        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    }  },  beforeMount() {    this.loadPost()  }}</script><style scoped></style></code></pre><h3 id="6、仓库和分类的列表展现"><a href="#6、仓库和分类的列表展现" class="headerlink" title="6、仓库和分类的列表展现"></a>6、仓库和分类的列表展现</h3><p>在StorageController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Storage<span class="token operator">></span> list <span class="token operator">=</span> storageService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodstypeController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Goodstype<span class="token operator">></span> list <span class="token operator">=</span> goodstypeService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在GoodsManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="物品名" width="180">      </el-table-column>      <el-table-column prop="storage" label="仓库" width="180" :formatter="formatStorage">      </el-table-column>      <el-table-column prop="goodstype" label="物品类别" width="180" :formatter="formatGoodstype">      </el-table-column>      <el-table-column prop="count" label="数量" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        :title="title"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="物品名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="仓库" prop="storage">          <el-col :span="30">            <el-input v-model="form.storage"></el-input>          </el-col>        </el-form-item>        <el-form-item label="物品类别" prop="goodstype">          <el-col :span="30">            <el-input v-model="form.goodstype"></el-input>          </el-col>        </el-form-item>        <el-form-item label="数量" prop="count">          <el-col :span="30">            <el-input v-model="form.count"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "GoodsManage",  data() {    let checkCount = (rule, value, callback) => {      if (value > 9999) {        callback(new Error('数量输入过大'))      } else {        callback()      }    }    return {      goodstypeData: [],      storageData: [],      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      title:'',      centerDialogVisible: false,      form: {        id: '',        name: '',        storage: '',        goodstype: '',        count: '',        remark: ''      },      rules: {        name: [          { required: true, message: '请输入物品名', trigger: 'blur' }        ],        count: [          { required: true, message: '请输入数量', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,4}$/, message: '数量必须为正整数', trigger: 'blur' },          { validator: checkCount, trigger: 'blur' }        ]      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/goods/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    loadStorage() {      this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.storageData = res.data        }      })    },    loadGoodstype() {      this.$axios.get(this.$httpUrl+'/goodstype/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.goodstypeData = res.data        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    add() {      this.title='新增'      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      this.title='修改'      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.storage = row.storage        this.form.goodstype = row.goodstype        this.form.count = row.count        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    },    formatStorage(row) {      let temp = this.storageData.find(item=>{        return item.id === row.storage      })      return temp && temp.name    },    formatGoodstype(row) {      let temp = this.goodstypeData.find(item=>{        return item.id === row.goodstype      })      return temp && temp.name    }  },  beforeMount() {    this.loadPost()    this.loadStorage()    this.loadGoodstype()  }}</script><style scoped></style></code></pre><h3 id="7、查询条件中增加仓库和分类的条件"><a href="#7、查询条件中增加仓库和分类的条件" class="headerlink" title="7、查询条件中增加仓库和分类的条件"></a>7、查询条件中增加仓库和分类的条件</h3><p>在GoodsManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select style="margin-left: 5px;" v-model="storage" placeholder="请选择仓库">        <el-option            v-for="item in storageData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-select style="margin-left: 5px;" v-model="goodstype" placeholder="请选择物品类别">        <el-option            v-for="item in goodstypeData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="物品名" width="180">      </el-table-column>      <el-table-column prop="storage" label="仓库" width="180" :formatter="formatStorage">      </el-table-column>      <el-table-column prop="goodstype" label="物品类别" width="180" :formatter="formatGoodstype">      </el-table-column>      <el-table-column prop="count" label="数量" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        :title="title"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="物品名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="仓库" prop="storage">          <el-col :span="30">            <el-select style="margin-left: 5px;" v-model="form.storage" placeholder="请选择仓库">              <el-option                  v-for="item in storageData"                  :key="item.id"                  :label="item.name"                  :value="item.id">              </el-option>            </el-select>          </el-col>        </el-form-item>        <el-form-item label="物品类别" prop="goodstype">          <el-col :span="30">            <el-select style="margin-left: 5px;" v-model="form.goodstype" placeholder="请选择物品类别">              <el-option                  v-for="item in goodstypeData"                  :key="item.id"                  :label="item.name"                  :value="item.id">              </el-option>            </el-select>          </el-col>        </el-form-item>        <el-form-item label="数量" prop="count">          <el-col :span="30">            <el-input v-model="form.count"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>  </div></template><script>export default {  name: "GoodsManage",  data() {    let checkCount = (rule, value, callback) => {      if (value > 9999) {        callback(new Error('数量输入过大'))      } else {        callback()      }    }    return {      goodstypeData: [],      storageData: [],      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      storage: '',      goodstype: '',      title:'',      centerDialogVisible: false,      form: {        id: '',        name: '',        storage: '',        goodstype: '',        count: '',        remark: ''      },      rules: {        name: [          { required: true, message: '请输入物品名', trigger: 'blur' }        ],        storage: [          { required: true, message: '请选择仓库', trigger: 'blur' }        ],        goodstype: [          { required: true, message: '请选择物品类别', trigger: 'blur' }        ],        count: [          { required: true, message: '请输入数量', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,4}$/, message: '数量必须为正整数', trigger: 'blur' },          { validator: checkCount, trigger: 'blur' }        ]      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/goods/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          storage: this.storage+'',          goodstype: this.goodstype+''        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    loadStorage() {      this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.storageData = res.data        }      })    },    loadGoodstype() {      this.$axios.get(this.$httpUrl+'/goodstype/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.goodstypeData = res.data        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = ''      this.storage = ''      this.goodstype = ''    },    add() {      this.title='新增'      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doMod() {      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    mod(row) {      this.title='修改'      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.storage = row.storage        this.form.goodstype = row.goodstype        this.form.count = row.count        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    },    formatStorage(row) {      let temp = this.storageData.find(item=>{        return item.id === row.storage      })      return temp && temp.name    },    formatGoodstype(row) {      let temp = this.goodstypeData.find(item=>{        return item.id === row.goodstype      })      return temp && temp.name    }  },  beforeMount() {    this.loadPost()    this.loadStorage()    this.loadGoodstype()  }}</script><style scoped></style></code></pre><p>在GoodsController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>Goods<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    LambdaQueryWrapper<span class="token operator">&lt;</span>Goods<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>Goods<span class="token operator">:</span><span class="token operator">:</span>getName<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Goods<span class="token operator">:</span><span class="token operator">:</span>getStorage<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lambdaQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>Goods<span class="token operator">:</span><span class="token operator">:</span>getGoodstype<span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    IPage<span class="token operator">&lt;</span>Goods<span class="token operator">></span> result <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="8、表单中仓库和分类下拉实现"><a href="#8、表单中仓库和分类下拉实现" class="headerlink" title="8、表单中仓库和分类下拉实现"></a>8、表单中仓库和分类下拉实现</h3><p>代码和“7、查询条件中增加仓库和分类的条件”中的GoodsManage.vue一样</p><h2 id="三十一、记录管理"><a href="#三十一、记录管理" class="headerlink" title="三十一、记录管理"></a>三十一、记录管理</h2><h3 id="1、表设计-3"><a href="#1、表设计-3" class="headerlink" title="1、表设计"></a>1、表设计</h3><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE `record`(    `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',    `goods` int(11) NOT NULL COMMENT '物品id',    `userId` int(11) DEFAULT NULL COMMENT '取货人/补货人',    `admin_id` int(11) DEFAULT NULL COMMENT '操作人id',    `count` int(11) DEFAULT NULL COMMENT '数量',    `createtime` datetime DEFAULT NULL COMMENT '操作时间',    `remark` varchar(1000) DEFAULT NULL COMMENT '备注',    PRIMARY KEY(`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</code></pre><h3 id="2、根据表生成后端代码-3"><a href="#2、根据表生成后端代码-3" class="headerlink" title="2、根据表生成后端代码"></a>2、根据表生成后端代码</h3><p>使用代码生成器</p><h3 id="3、编写后端查询代码"><a href="#3、编写后端查询代码" class="headerlink" title="3、编写后端查询代码"></a>3、编写后端查询代码</h3><p>在RecordController中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>LambdaQueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>QueryPageParam<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Record<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RecordService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PostMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestBody<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/record"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecordController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RecordService recordService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>Record<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LambdaQueryWrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> lambdaQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.like(Record::getName, (String) param.get("name"));</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getStorage, (String) param.get("storage"));</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getGoodstype, (String) param.get("goodstype"));</span>        <span class="token punctuation">}</span>        IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> result <span class="token operator">=</span> recordService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> lambdaQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在RecordService中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Record<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务类 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RecordService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token operator">&lt;</span>Record<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在RecordServiceImpl中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Record<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>RecordMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RecordService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>ServiceImpl<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  服务实现类 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecordServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token operator">&lt;</span>RecordMapper<span class="token punctuation">,</span> Record<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">RecordService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RecordMapper recordMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> page<span class="token punctuation">,</span> Wrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> wrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> recordMapper<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在RecordMapper中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Record<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>BaseMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  Mapper 接口 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RecordMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token operator">&lt;</span>Record<span class="token operator">></span> <span class="token punctuation">{</span>    IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> <span class="token function">pageCC</span><span class="token punctuation">(</span>IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>WRAPPER<span class="token punctuation">)</span> Wrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在RecordMapper.xml中：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.RecordMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询映射结果 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Record<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goods<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goods<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userId<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userid<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin_id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>adminId<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createtime<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询结果列 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        id, goods, userId, admin_id, count, createtime, remark    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Record<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select * from record ${ew.customSqlSegment}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h3 id="4、编写前端相关代码"><a href="#4、编写前端相关代码" class="headerlink" title="4、编写前端相关代码"></a>4、编写前端相关代码</h3><p>在RecordManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select style="margin-left: 5px;" v-model="storage" placeholder="请选择仓库">        <el-option            v-for="item in storageData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-select style="margin-left: 5px;" v-model="goodstype" placeholder="请选择物品类别">        <el-option            v-for="item in goodstypeData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border    >      <el-table-column prop="id" label="ID" width="60">      </el-table-column>      <el-table-column prop="name" label="物品名" width="120">      </el-table-column>      <el-table-column prop="storage" label="仓库" width="120">      </el-table-column>      <el-table-column prop="goodstype" label="物品类别" width="120">      </el-table-column>      <el-table-column prop="adminId" label="操作人" width="150">      </el-table-column>      <el-table-column prop="userid" label="申请人" width="150">      </el-table-column>      <el-table-column prop="count" label="数量" width="120">      </el-table-column>      <el-table-column prop="createtime" label="操作时间" width="150">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>  </div></template><script>export default {  name: "RecordManage",  data() {    return {      goodstypeData: [],      storageData: [],      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      storage: '',      goodstype: '',      title:'',      centerDialogVisible: false,      form: {        id: '',        name: '',        storage: '',        goodstype: '',        count: '',        remark: ''      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/record/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          storage: this.storage+'',          goodstype: this.goodstype+''        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = ''      this.storage = ''      this.goodstype = ''    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    resetForm() {      this.$refs.form.resetFields();    }  },  beforeMount() {    this.loadPost()  }}</script><style scoped></style></code></pre><h3 id="5、优化"><a href="#5、优化" class="headerlink" title="5、优化"></a>5、优化</h3><ul><li>列表展示物品名、仓库、物品类别</li></ul><p>新建entity类RecordRes.java：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecordRes</span> <span class="token keyword">extends</span> <span class="token class-name">Record</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token keyword">private</span> String adminname<span class="token punctuation">;</span>    <span class="token keyword">private</span> String goodsname<span class="token punctuation">;</span>    <span class="token keyword">private</span> String storagename<span class="token punctuation">;</span>    <span class="token keyword">private</span> String goodstypename<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>修改RecordMapper.xml：</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.RecordRes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select a.*,b.name goodsname,c.name storagename,d.name goodstypename,           (select u.name from user u where u.id=a.userId) username,           (select u.name from user u where u.id=a.admin_id) adminname    from record a,goods b,storage c,goodstype d where b.id=a.goods and        c.id=(select m.storage from goods m where m.id=a.goods) and        d.id=(select n.goodsType from goods n where n.id=a.goods) ${ew.customSqlSegment}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><ul><li>按物品名、仓库、物品类别查询</li></ul><p>在RecordController中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span><span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Page<span class="token operator">&lt;</span>Record<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        LambdaQueryWrapper&lt;Record> lambdaQueryWrapper = new LambdaQueryWrapper&lt;>();</span>    QueryWrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    queryWrapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">"b.id=a.goods and c.id=b.storage and d.id=b.goodsType"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.like(Record::getGoodsname, (String) param.get("name"));</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"b.name"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getStoragename, (String) param.get("storage"));</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"c.id"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getGoodstypename, (String) param.get("goodstype"));</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"d.id"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> result <span class="token operator">=</span> recordService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在RecordMapper.xml中：</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.mapper.RecordMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询映射结果 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.Record<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goods<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goods<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userId<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userid<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin_id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>adminId<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createtime<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>createtime<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 通用查询结果列 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        id, goods, userId, admin_id, count, createtime, remark    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageCC<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.wms.entity.RecordRes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select a.*,b.name goodsname,c.name storagename,d.name goodstypename,               (select u.name from user u where u.id=a.userId) username,               (select u.name from user u where u.id=a.admin_id) adminname        from record a,goods b,storage c,goodstype d ${ew.customSqlSegment}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h2 id="三十二、出库、入库"><a href="#三十二、出库、入库" class="headerlink" title="三十二、出库、入库"></a>三十二、出库、入库</h2><h3 id="1、表单编写"><a href="#1、表单编写" class="headerlink" title="1、表单编写"></a>1、表单编写</h3><p>在GoodsManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入物品名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select style="margin-left: 5px;" v-model="storage" placeholder="请选择仓库">        <el-option            v-for="item in storageData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-select style="margin-left: 5px;" v-model="goodstype" placeholder="请选择物品类别">        <el-option            v-for="item in goodstypeData"            :key="item.id"            :label="item.name"            :value="item.id">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="add">新增</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="inGoods">入库</el-button>      <el-button type="primary" style="margin-left: 5px;" @click="outGoods">出库</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border        highlight-current-row        @current-change="selectCurrentChange"    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="name" label="物品名" width="180">      </el-table-column>      <el-table-column prop="storage" label="仓库" width="180" :formatter="formatStorage">      </el-table-column>      <el-table-column prop="goodstype" label="物品类别" width="180" :formatter="formatGoodstype">      </el-table-column>      <el-table-column prop="count" label="数量" width="180">      </el-table-column>      <el-table-column prop="remark" label="备注">      </el-table-column>      <el-table-column prop="operation" label="操作" width="280">        <template slot-scope="scope">          <el-button size="small" type="success" @click="mod(scope.row)">编辑</el-button>          <el-popconfirm              title="确定删除吗？"              @confirm="del(scope.row.id)"              style="margin-left: 5px;"          >            <el-button slot="reference" size="small" type="danger">删除</el-button>          </el-popconfirm>        </template>      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>    <el-dialog        :title="title"        :visible.sync="centerDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-form ref="form" :model="form" :rules="rules" label-width="120px">        <el-form-item label="物品名" prop="name">          <el-col :span="30">            <el-input v-model="form.name"></el-input>          </el-col>        </el-form-item>        <el-form-item label="仓库" prop="storage">          <el-col :span="30">            <el-select style="margin-left: 5px;" v-model="form.storage" placeholder="请选择仓库">              <el-option                  v-for="item in storageData"                  :key="item.id"                  :label="item.name"                  :value="item.id">              </el-option>            </el-select>          </el-col>        </el-form-item>        <el-form-item label="物品类别" prop="goodstype">          <el-col :span="30">            <el-select style="margin-left: 5px;" v-model="form.goodstype" placeholder="请选择物品类别">              <el-option                  v-for="item in goodstypeData"                  :key="item.id"                  :label="item.name"                  :value="item.id">              </el-option>            </el-select>          </el-col>        </el-form-item>        <el-form-item label="数量" prop="count">          <el-col :span="30">            <el-input v-model="form.count"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="centerDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="save">确 定</el-button>      </span>    </el-dialog>    <el-dialog        :title="title"        :visible.sync="inDialogVisible"        width="30%"        :before-close="handleClose"        center>      <el-dialog          width="50%"          title="选择申请人"          :visible.sync="innerVisible"          append-to-body>        <SelectUser @doSelectUser="doSelectUser"></SelectUser>        <span slot="footer" class="dialog-footer">          <el-button @click="closeInner">取 消</el-button>          <el-button type="primary" @click="confirmUser">确 定</el-button>        </span>      </el-dialog>      <el-form ref="form1" :model="form1" :rules="rules1" label-width="120px">        <el-form-item label="物品名">          <el-col :span="30">            <el-input v-model="form1.goodsname" readonly></el-input>          </el-col>        </el-form-item>        <el-form-item label="申请人">          <el-col :span="30">            <el-input v-model="form1.username" readonly @click.native="selectUser"></el-input>          </el-col>        </el-form-item>        <el-form-item label="数量" prop="count">          <el-col :span="30">            <el-input v-model="form1.count"></el-input>          </el-col>        </el-form-item>        <el-form-item label="备注" prop="remark">          <el-col :span="30">            <el-input type="textarea" v-model="form1.remark"></el-input>          </el-col>        </el-form-item>      </el-form>      <span slot="footer" class="dialog-footer">        <el-button @click="inDialogVisible = false">取 消</el-button>        <el-button type="primary" @click="doInGoods">确 定</el-button>      </span>    </el-dialog>  </div></template><script>import SelectUser from "@/components/user/SelectUser.vue";export default {  name: "GoodsManage",  components: {SelectUser},  data() {    let checkCount = (rule, value, callback) => {      if (value > 9999) {        callback(new Error('数量输入过大'))      } else {        callback()      }    }    return {      user: JSON.parse(sessionStorage.getItem('CurUser')),      goodstypeData: [],      storageData: [],      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      storage: '',      goodstype: '',      title:'',      centerDialogVisible: false,      inDialogVisible: false,      innerVisible: false,      currentRow: {},      tempUser: {},      form: {        id: '',        name: '',        storage: '',        goodstype: '',        count: '',        remark: ''      },      form1: {        goods:'',        goodsname:'',        count:'',        username:'',        userid:'',        adminId:'',        remark:'',        action:'1'      },      rules: {        name: [          { required: true, message: '请输入物品名', trigger: 'blur' }        ],        storage: [          { required: true, message: '请选择仓库', trigger: 'blur' }        ],        goodstype: [          { required: true, message: '请选择物品类别', trigger: 'blur' }        ],        count: [          { required: true, message: '请输入数量', trigger: 'blur' },          { pattern: /^([1-9][0-9]*){1,4}$/, message: '数量必须为正整数', trigger: 'blur' },          { validator: checkCount, trigger: 'blur' }        ]      },      rules1: {      }    }  },  methods: {    loadPost() {      this.$axios.post(this.$httpUrl+'/goods/listPage',{        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          storage: this.storage+'',          goodstype: this.goodstype+''        }      }).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    loadStorage() {      this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.storageData = res.data        }      })    },    loadGoodstype() {      this.$axios.get(this.$httpUrl+'/goodstype/list').then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.goodstypeData = res.data        }      })    },    selectCurrentChange(val) {      this.currentRow = val    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = ''      this.storage = ''      this.goodstype = ''    },    add() {      this.title='新增'      this.centerDialogVisible = true      this.$nextTick(()=>{        this.resetForm()      })    },    inGoods() {      this.title='入库'      if (!this.currentRow.id) {        alert('请选择物品')        return;      }      this.form1.username = ''      this.inDialogVisible = true      this.$nextTick(()=>{        this.resetInForm()      })      this.form1.goods = this.currentRow.id      this.form1.goodsname = this.currentRow.name      this.form1.adminId = this.user.id      this.form1.action = '1'    },    outGoods() {      this.title='出库'      if (!this.currentRow.id) {        alert('请选择物品')        return;      }      this.form1.username = ''      this.inDialogVisible = true      this.$nextTick(()=>{        this.resetInForm()      })      this.form1.goods = this.currentRow.id      this.form1.goodsname = this.currentRow.name      this.form1.adminId = this.user.id      this.form1.action = '2'    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {});    },    doSave() {      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    doInGoods() {      this.$axios.post(this.$httpUrl+'/record/save',this.form1).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '新增成功',            type: 'success'          });          this.inDialogVisible = false          this.loadPost()        } else {          this.$message.error("新增失败");        }      })    },    selectUser() {      this.innerVisible = true    },    closeInner() {      this.innerVisible = false      this.form1.username = ''    },    confirmUser() {      this.form1.userid = this.tempUser.id      this.form1.username = this.tempUser.name      this.innerVisible = false    },    doSelectUser(val) {      this.tempUser = val    },    doMod() {      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{        console.log(res)        if (res.code === 200) {          this.$message({            message: '修改成功',            type: 'success'          });          this.centerDialogVisible = false          this.loadPost()        } else {          this.$message.error("修改失败");        }      })    },    save() {      this.$refs.form.validate((valid) => {        if (valid) {          if (this.form.id) {            this.doMod()          } else {            this.doSave()          }        } else {          console.log('error submit!!');          return false;        }      });    },    resetForm() {      this.$refs.form.resetFields();    },    resetInForm() {      this.$refs.form1.resetFields();    },    mod(row) {      this.title='修改'      this.centerDialogVisible = true      this.$nextTick(()=>{        //赋值到表单        this.form.id = row.id        this.form.name = row.name        this.form.storage = row.storage        this.form.goodstype = row.goodstype        this.form.count = row.count        this.form.remark = row.remark      })    },    del(id) {      console.log(id)      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{        if (res.code === 200) {          this.$message({            message: '删除成功',            type: 'success'          });          this.loadPost()        } else {          this.$message.error("删除失败");        }      })    },    formatStorage(row) {      let temp = this.storageData.find(item=>{        return item.id === row.storage      })      return temp && temp.name    },    formatGoodstype(row) {      let temp = this.goodstypeData.find(item=>{        return item.id === row.goodstype      })      return temp && temp.name    }  },  beforeMount() {    this.loadPost()    this.loadStorage()    this.loadGoodstype()  }}</script><style scoped></style></code></pre><p>在SelectUser.vue中：</p><pre class=" language-vue"><code class="language-vue"><template>  <div>    <div style="margin-bottom: 5px;">      <el-input v-model="name" placeholder="请输入姓名" suffix-icon="el-icon-search" style="width: 200px;"                @keyup.enter.native="loadPost"></el-input>      <el-select v-model="sex" placeholder="请选择性别" style="margin-left: 5px;">        <el-option            v-for="item in sexs"            :key="item.value"            :label="item.label"            :value="item.value">        </el-option>      </el-select>      <el-button type="primary" style="margin-left: 5px;" @click="loadPost">查询</el-button>      <el-button type="success" @click="resetParam">重置</el-button>    </div>    <el-table        :data="tableData"        :header-cell-style="{background: '#f3f6fd', color: '#555'}"        border        highlight-current-row        @current-change="selectCurrentChange"    >      <el-table-column prop="id" label="ID" width="80">      </el-table-column>      <el-table-column prop="no" label="账号" width="120">      </el-table-column>      <el-table-column prop="name" label="姓名" width="120">      </el-table-column>      <el-table-column prop="age" label="年龄" width="80">      </el-table-column>      <el-table-column prop="sex" label="性别" width="80">        <template slot-scope="scope">          <el-tag              :type="scope.row.sex === 1 ? 'primary' : 'success'"              disable-transitions>{{scope.row.sex === 1 ? '男' : '女'}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="roleId" label="角色" width="120">        <template slot-scope="scope">          <el-tag              :type="scope.row.roleId === 0 ? 'danger' : (scope.row.roleId === 1 ? 'primary' : 'success')"              disable-transitions>{{scope.row.roleId === 0 ? '超级管理员' : (scope.row.roleId === 1 ? '管理员' : '普通用户')}}</el-tag>        </template>      </el-table-column>      <el-table-column prop="phone" label="电话">      </el-table-column>    </el-table>    <el-pagination        @size-change="handleSizeChange"        @current-change="handleCurrentChange"        :current-page="pageNum"        :page-sizes="[10, 20, 50, 100]"        :page-size="pageSize"        layout="total, sizes, prev, pager, next, jumper"        :total="total">    </el-pagination>  </div></template><script>export default {  name: "SelectUser",  data() {    return {      tableData: [],      pageSize: 10,      pageNum: 1,      total: 0,      name: '',      sex: '',      sexs: [        {          value: '0',          label: '女'        },        {          value: '1',          label: '男'        }      ],      title:'',      centerDialogVisible: false,      form: {        id: '',        no: '',        name: '',        password: '',        age: '',        sex: '0',        phone: '',        roleId: '2'      }    }  },  methods: {    loadGet() {      this.$axios.get(this.$httpUrl + '/user/list').then(res => res.data).then(res => {        console.log(res)      })    },    loadPost() {      this.$axios.post(this.$httpUrl + '/user/listPageCC1', {        pageSize: this.pageSize,        pageNum: this.pageNum,        param: {          name: this.name,          sex: this.sex,          roleId: '2'        }      }).then(res => res.data).then(res => {        console.log(res)        if (res.code === 200) {          this.tableData = res.data          this.total = res.total        }      })    },    selectCurrentChange(val) {      // this.currentRow = val      this.$emit("doSelectUser", val)    },    handleSizeChange(val) {      console.log(`每页 ${val} 条`);      this.pageNum = 1      this.pageSize = val      this.loadPost()    },    handleCurrentChange(val) {      console.log(`当前页: ${val}`);      this.pageNum = val      this.loadPost()    },    resetParam() {      this.name = '';      this.sex = ''    },    handleClose(done) {      this.$confirm('确认关闭？')          .then(() => {            done();          })          .catch(() => {          });    },  },  beforeMount() {    // this.loadGet()    this.loadPost()  }}</script><style scoped></style></code></pre><h3 id="2、入库操作（记录、更新物品数量、自动填充时间）"><a href="#2、入库操作（记录、更新物品数量、自动填充时间）" class="headerlink" title="2、入库操作（记录、更新物品数量、自动填充时间）"></a>2、入库操作（记录、更新物品数量、自动填充时间）</h3><p>在Record.java中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>IdType<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TableId<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDateTime<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>TableField<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>EqualsAndHashCode<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"Record对象"</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Record</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"主键"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> type <span class="token operator">=</span> IdType<span class="token punctuation">.</span>AUTO<span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"物品id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer goods<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"取货人/补货人"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"操作人id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer adminId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"数量"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer count<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"操作时间"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> LocalDateTime createtime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"备注"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String action<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在RecordController.java中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>QueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>QueryPageParam<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Result<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Goods<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Record<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>RecordRes<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>GoodsService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>wms<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RecordService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PostMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestBody<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> *  前端控制器 * &lt;/p> * * @author ghost * @since 2023-10-19 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/record"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecordController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RecordService recordService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> GoodsService goodsService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/listPage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">listPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> QueryPageParam query<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>Record<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setCurrent</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        page<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap param <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        LambdaQueryWrapper&lt;Record> lambdaQueryWrapper = new LambdaQueryWrapper&lt;>();</span>        QueryWrapper<span class="token operator">&lt;</span>Record<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">"b.id=a.goods and c.id=b.storage and d.id=b.goodsType"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.like(Record::getGoodsname, (String) param.get("name"));</span>            queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"b.name"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getStoragename, (String) param.get("storage"));</span>            queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"c.id"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"storage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            lambdaQueryWrapper.eq(Record::getGoodstypename, (String) param.get("goodstype"));</span>            queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">"d.id"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"goodstype"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        IPage<span class="token operator">&lt;</span>Record<span class="token operator">></span> result <span class="token operator">=</span> recordService<span class="token punctuation">.</span><span class="token function">pageCC</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"total==="</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//新增</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Result <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Record record<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Goods goods <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">getGoods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            num <span class="token operator">=</span> <span class="token operator">-</span>num<span class="token punctuation">;</span>            record<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> goods<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> num<span class="token punctuation">;</span>        goods<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>        goodsService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> recordService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token operator">?</span>Result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>Result<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3、用户选择"><a href="#3、用户选择" class="headerlink" title="3、用户选择"></a>3、用户选择</h3><p>见“1、表单编写”</p><h2 id="三十三、优化"><a href="#三十三、优化" class="headerlink" title="三十三、优化"></a>三十三、优化</h2><h3 id="1、出入库权限控制"><a href="#1、出入库权限控制" class="headerlink" title="1、出入库权限控制"></a>1、出入库权限控制</h3><p>在GoodsManage.vue中：</p><pre class=" language-vue"><code class="language-vue"><el-button type="primary" style="margin-left: 5px;" @click="add" v-if="user.roleId!==2">新增</el-button><el-button type="primary" style="margin-left: 5px;" @click="inGoods" v-if="user.roleId!==2">入库</el-button><el-button type="primary" style="margin-left: 5px;" @click="outGoods" v-if="user.roleId!==2">出库</el-button><el-table-column prop="operation" label="操作" width="280" v-if="user.roleId!==2"></code></pre><h3 id="2、记录查询权限控制"><a href="#2、记录查询权限控制" class="headerlink" title="2、记录查询权限控制"></a>2、记录查询权限控制</h3><p>在RecordManage.vue中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      user<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'CurUser'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">loadPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$httpUrl<span class="token operator">+</span><span class="token string">'/record/listPage'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>    pageSize<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>    pageNum<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageNum<span class="token punctuation">,</span>    param<span class="token punctuation">:</span> <span class="token punctuation">{</span>      name<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>      storage<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token operator">+</span><span class="token string">''</span><span class="token punctuation">,</span>      goodstype<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>goodstype<span class="token operator">+</span><span class="token string">''</span><span class="token punctuation">,</span>      roleId<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>roleId<span class="token operator">+</span><span class="token string">''</span><span class="token punctuation">,</span>      userId<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token operator">+</span><span class="token string">''</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tableData <span class="token operator">=</span> res<span class="token punctuation">.</span>data      <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>total    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>在RecordController.java中：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"roleId"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    queryWrapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">"a.userId="</span><span class="token operator">+</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="三十四、Vuex持久化后刷新丢失问题（菜单和动态路由）"><a href="#三十四、Vuex持久化后刷新丢失问题（菜单和动态路由）" class="headerlink" title="三十四、Vuex持久化后刷新丢失问题（菜单和动态路由）"></a>三十四、Vuex持久化后刷新丢失问题（菜单和动态路由）</h2><h3 id="1、插件vuex-persistedstate使用"><a href="#1、插件vuex-persistedstate使用" class="headerlink" title="1、插件vuex-persistedstate使用"></a>1、插件vuex-persistedstate使用</h3><ul><li>安装</li></ul><pre class=" language-shell"><code class="language-shell">npm i vuex-persistedstate</code></pre><ul><li>引入</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> createPersistedState <span class="token keyword">from</span> <span class="token string">'vuex-persistedstate'</span></code></pre><ul><li>使用</li></ul><pre class=" language-javascript"><code class="language-javascript">plugins<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><h3 id="2、菜单问题解决"><a href="#2、菜单问题解决" class="headerlink" title="2、菜单问题解决"></a>2、菜单问题解决</h3><h3 id="3、动态路由问题"><a href="#3、动态路由问题" class="headerlink" title="3、动态路由问题"></a>3、动态路由问题</h3><p>在App.vue中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    user<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'CurUser'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token string">'$store.state.menu'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">handler</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> old<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>no<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"setMenu"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    immediate<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Vue后台管理系统</title>
      <link href="/2023/09/07/springboot-vue-hou-tai-guan-li-xi-tong/"/>
      <url>/2023/09/07/springboot-vue-hou-tai-guan-li-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot-Vue后台管理系统"><a href="#SpringBoot-Vue后台管理系统" class="headerlink" title="SpringBoot+Vue后台管理系统"></a>SpringBoot+Vue后台管理系统</h1><h2 id="01-Vue2集成ElementUI"><a href="#01-Vue2集成ElementUI" class="headerlink" title="01 Vue2集成ElementUI"></a>01 Vue2集成ElementUI</h2><p>软件版本：</p><ul><li>JDK 1.8</li><li>MySQL 5.7+</li><li>node 14.16.0</li><li>navicat</li><li>idea</li></ul><p>vue-cli安装命令：</p><p>npm install -g @vue/cli这条命令会安装最新版本的vue-cli</p><p>如果想要安装指定版本的vue-cli可以使用下面的命令：</p><p>npm install -g @vue/cli@版本号这里的“版本号”填自己想要安装的版本就可以了，比如4.16.0</p><p>vue-cli版本查看：</p><p>vue –version</p><p>vue -V</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907170316461.png"></p><p>以上两个命令都可以查看vue-cli的版本</p><p>npm淘宝镜像设置：</p><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>创建vue项目：</p><p>找一个文件夹留放项目，然后在这个文件夹下通过控制台，输入vue create 项目名即可创建项目。</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171120798.png"></p><p>选择Manually select features</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171146670.png"></p><p>选择Choose Vue version，Babel，Router，其他的不选</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171223181.png"></p><p>选择2.x</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171245227.png"></p><p>Use history mode for router?选择Y</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171307872.png"></p><p>选择In package.json</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171330854.png"></p><p>Save this as a preset for future projects?选择N</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171350360.png"></p><p>这样项目就创建成功了，如下图所示：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907171653358.png"></p><p>按照控制台上面的步骤：</p><p>cd demo</p><p>npm run serve</p><p>就可以启动vue项目了</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907172347494.png"></p><p>在浏览器中输入localhost:8080即可访问</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907172504582.png"></p><p>想要停止服务在控制台输入Ctrl+C即可，也可以直接关闭控制台：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173822563.png"></p><p>使用idea打开vue项目：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173021608.png"></p><p>Element安装：</p><p>npm i element-ui -S</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907173933721.png"></p><p>安装成功后，在package.json文件中可以看到element-ui的版本号：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907174112337.png"></p><p>使用element-ui：</p><p>将以下两行代码复制到main.js文件中：</p><p>import ElementUI from ‘element-ui’; </p><p>import ‘element-ui/lib/theme-chalk/index.css’;</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175016502.png"></p><p>复制下面一行代码到main.js中：</p><p>Vue.use(ElementUI);</p><p>其中，还可以配置组件大小</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175238424.png"></p><p>测试element-ui是否可以使用：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175414069.png"></p><p>重新启动项目看一下效果：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175539526.png"></p><p>通过el-button的type属性可以更改按钮颜色：</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175855944.png"></p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230907175910237.png"></p><p>primary: 蓝色</p><p>success: 绿色</p><p>info: 灰色</p><p>warning: 橙色</p><p>danger: 红色</p><h2 id="02-Vue后台主体框架搭建"><a href="#02-Vue后台主体框架搭建" class="headerlink" title="02 Vue后台主体框架搭建"></a>02 Vue后台主体框架搭建</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AE教程</title>
      <link href="/2023/09/06/ae-jiao-cheng/"/>
      <url>/2023/09/06/ae-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="AE教程"><a href="#AE教程" class="headerlink" title="AE教程"></a>AE教程</h1><h2 id="01-了解影视后期合成及AE软件"><a href="#01-了解影视后期合成及AE软件" class="headerlink" title="01 了解影视后期合成及AE软件"></a>01 了解影视后期合成及AE软件</h2><p>AE软件涵盖的范围：</p><p>栏目包装</p><p>特效合成</p><p>抠像合成</p><p>剪辑调色</p><p>AE工作的基本原理：</p><p>层级合成</p><p>层级合成的由来：</p><p>使用在特殊玻璃片上绘景的技术利用摄像机视差的原理来制作特效场景，这些玻璃片就是后期软件中的层。</p><p>目前市面上比较常用的影视特效合成软件：</p><p>AfterEffectsNukeautodeask smoke</p><p>AE是层级合成，Nuke是节点合成。</p><p>层级合成与节点合成的区别介绍：</p><p>层级合成在AE中是一层一层叠加的形式，而节点合成在Nuke中是一个节点一个节点进行拼接的形式。</p><h2 id="02-AE软件初识-工作流程初识"><a href="#02-AE软件初识-工作流程初识" class="headerlink" title="02 AE软件初识_工作流程初识"></a>02 AE软件初识_工作流程初识</h2><p>小案例：加水印</p><p>1、将素材拖入AE中</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091511873.png"></p><p>这时我们可以看到项目栏多出了刚刚拖入的素材</p><p>2、将项目栏的素材视频拖入到下方</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091705455.png"></p><p>3、点击工具栏中的文字工具，然后在视频中点击一下，输入想加入的水印，这里以“谢谢观看”为例</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908091843567.png"></p><p>4、接下来就是调整字体、字体大小和字体位置，其中字体是在视频右边的字符目录中进行调整，字体大小可以通过按住shift键进行文本框的拖拽，这样可以保持等比例缩放，要注意拖拽的时候我们要选择鼠标工具，而不是文本工具，字体位置的话拖动文本框即可</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092239645.png"></p><p>5、接下来就是调整字体不透明度</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092338869.png"></p><p>6、这样水印就已经添加成功，然后就是导出视频</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092633614.png"></p><p>7、接下来我们需要设置输出位置和输出模块</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092802732.png"></p><p>输出位置自己随便设置就行了，输出模块的话，需要选择格式为”QuickTime”，格式选项的视频编解码器设置为”GoPro CineForm”，品质调节到5</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908092913202.png"></p><p>8、接下来点击渲染就可以进行视频的导出了</p><p><img src="https://mp-2b173430-3ddc-45bd-a066-3b8d07aec2d2.cdn.bspapp.com/image-20230908093112263.png"></p><p>9、这时只是导出了视频，项目还没有进行保存，不要直接把项目给关闭掉，需要点击文件中的保存按钮，然后设置一下项目名即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> AE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python网站开发</title>
      <link href="/2023/08/21/python-wang-zhan-kai-fa/"/>
      <url>/2023/08/21/python-wang-zhan-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="python网站开发"><a href="#python网站开发" class="headerlink" title="python网站开发"></a>python网站开发</h1>]]></content>
      
      
      
        <tags>
            
            <tag> python 网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>政企体系公共教材基础知识篇</title>
      <link href="/2023/08/18/zheng-qi-ti-xi-gong-gong-jiao-cai-ji-chu-zhi-shi-pian/"/>
      <url>/2023/08/18/zheng-qi-ti-xi-gong-gong-jiao-cai-ji-chu-zhi-shi-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="政企体系公共教材基础知识篇"><a href="#政企体系公共教材基础知识篇" class="headerlink" title="政企体系公共教材基础知识篇"></a>政企体系公共教材基础知识篇</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 政企 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2023/07/12/python-pa-chong/"/>
      <url>/2023/07/12/python-pa-chong/</url>
      
        <content type="html"><![CDATA[<h1 id="python爬虫"><a href="#python爬虫" class="headerlink" title="python爬虫"></a>python爬虫</h1><h2 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言</title>
      <link href="/2023/07/03/go-yu-yan/"/>
      <url>/2023/07/03/go-yu-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="Go语言"><a href="#Go语言" class="headerlink" title="Go语言"></a>Go语言</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/01/hello-world/"/>
      <url>/2023/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
